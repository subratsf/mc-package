{
  "api": {
    "title": "API",
    "description": "Use these functions to interact with the Marketing Cloud web service SOAP API.",
    "functions": {
      "AddObjectArrayItem": {
        "title": "AddObjectArrayItem",
        "description": "Appends an object to an array on an API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "API object",
            "desc": "API object containing the array"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Array property to receive new item"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Item to add to array"
          }
        ]
      },
      "CreateObject": {
        "title": "CreateObject",
        "description": "Returns a new Marketing Cloud web service API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "API object receiving the new item in text form"
          }
        ]
      },
      "InvokeCreate": {
        "title": "InvokeCreate",
        "description": "Invokes the Create method on an API object. Returns the API status code.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "The API object to be created"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Output parameter for the API status message"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "numeric",
            "desc": "Output parameter for the API error code"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "object",
            "desc": "CreateOptions API object"
          }
        ]
      },
      "InvokeDelete": {
        "title": "InvokeDelete",
        "description": "Invokes the Delete method on an API object. Returns the API status code.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "API object to delete"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Output parameter for API status message"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "numeric",
            "desc": "Output parameter for API error code"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "object",
            "desc": "DeleteOptions API object"
          }
        ]
      },
      "InvokeExecute": {
        "title": "InvokeExecute",
        "description": "Invokes the Execute method on an API object. Returns the API status code.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "API object to execute"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "variable",
            "desc": "Output parameter used to obtain status"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "variable",
            "desc": "Output parameter used to obtain request ID"
          }
        ]
      },
      "InvokePerform": {
        "title": "InvokePerform",
        "description": "Invokes the Perform method on an API object. Returns the API status code.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "API object to perform"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Action to perform, with valid parameter values varying depending on object type"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "variable",
            "desc": "Output parameter for API status message"
          }
        ]
      },
      "InvokeRetrieve": {
        "title": "InvokeRetrieve",
        "description": "Returns an array of API objects from a RetrieveRequest object.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "API object from which to return array of API objects"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "variable",
            "desc": "Retrieve call OverallStatus parameter that is passed to a defined AMPscript variable. You pass in the variable and the method returns the value stored in that variable. See other Invoke calls for previously defined variables. See the Retrieve method for possible OverallStatus values."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "variable",
            "desc": "Retrieve call RequestID parameter that is passed to a defined AMPscript variable. You pass in the variable and the method returns the value stored in that variable. See other Invoke calls for previously defined variables. See the Retrieve method for more information about RequestID values."
          }
        ]
      },
      "InvokeUpdate": {
        "title": "InvokeUpdate",
        "description": "Invokes the Update method on an API object.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "Text object for API object"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "variable",
            "desc": "Text status message"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "variable",
            "desc": "Numeric error code required if you add additional text options in the following ordinal"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Additional text values"
          }
        ]
      },
      "RaiseError": {
        "title": "RaiseError",
        "description": "Raises the error given in string and stops processing of job. If optional B1 is included with a value of true, this function stops the send for the current subscriber only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Error message to display"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "boolean",
            "desc": "Indicates whether function skips send for current subscriber and continues or stops. A value of true skips the send for current subscriber and moves to next subscriber. A value of false stops the send and returns an error. Function defaults to false."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "API error code"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "API error number"
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "boolean",
            "desc": "Indicates whether the function records information to data extensions before error occurs, even if the process skips the subscriber. A value of 1 retains information written to data extensions before the error occurs, even if the subscriber is skipped. A value of 0 does not retain information recorded before the error. This parameter refers to inserted, updated, upserted, or deleted information via AMPscript."
          }
        ]
      },
      "SetObjectProperty": {
        "title": "SetObjectProperty",
        "description": "Sets a value for an object created by the CreateObject function.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "API object receiving assigned value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of property assigned"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value of property assigned"
          }
        ]
      }
    }
  },
  "contacts": {
    "title": "Contacts",
    "description": "Use these functions to manage data associated with the contacts contained within your Marketing Cloud account. Create the AMPscript to use and include it in context areas as part of MobileConnect, Reply Mail Management, or landing page contexts. The Contacts AMPscript functions take information sent from mobile devices to Marketing Cloud applications and process it accordingly. You cannot use Contacts AMPscript functions in email messages or SMS messages outside of the MobileConnect app.",
    "functions": {
      "UpsertContact": {
        "title": "UpsertContact",
        "description": "Updates an existing contact in the specified channel with the specified primary key and primary key value. List as many attribute name and attribute values as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "The channel to update for a contact. Possible values include: mobile"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Primary key type used to locate contact. Possible values include: phone"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value of primary key used to locate contact"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Name of attribute to upsert"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value of attribute to upsert"
          }
        ]
      }
    }
  },
  "content": {
    "title": "Content",
    "description": "Use these functions to interact with content contained in your Marketing Cloud account.",
    "functions": {
      "AttachFile": {
        "title": "AttachFile",
        "description": "Attaches a file to an outgoing email message and can include a link to the file when you view the email as a web page. Contact your Marketing Cloud account representative to enable AMPscript email attachments for your account before using this function. You can also contact your account representative to adjust the error threshold that causes the send job to stop prematurely. This feature helps prevent a single error from stopping the entire job.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Location from which to pull files. Valid values include HTTP, FTP, Portfolio (for Classic Portfolio), or ContentBuilder (for Content Builder)."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Location from which to pull attachments. 2088 characters maximum. Specify a URL if you select HTTP. Specify the name of the file in the Import folder of your Enhanced FTP site if you select FTP. Specify the external key if you select Portfolio or ContentBuilder."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Name assigned to file when system attaches it to an email message. The function uses the original file name if you don't specify a new name. If you don't specify a value for the HTTP option, the function uses the Content-Disposition information from the HTTP header. If the server providing the file does not provide Content-Disposition information, the function uses an auto-generated value. For Content Builder, the file extension is dropped if you don't include the name and file extension."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "boolean",
            "desc": "Indicates whether a link to the attached file appears in View As A Web Page. Use only if string is HTTP."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "string",
            "desc": "URL of the attachment link to use for View As A Web Page. Use only if string is HTTP."
          },
          {
            "required": false,
            "ordinal": "6",
            "type": "string",
            "desc": "Text for attachment link used in View As A Web Page. Use only if string is HTTP."
          },
          {
            "required": false,
            "ordinal": "7",
            "type": "int",
            "desc": "Number of days the link appears in View As A Web Page. Use only if string is HTTP."
          },
          {
            "required": false,
            "ordinal": "8",
            "type": "boolean",
            "desc": "When true, changes the content-disposition from inline to attachment, when the default is inline."
          }
        ]
      },
      "BarCodeURL": {
        "title": "BarCodeURL",
        "description": "Generates the specified barcode using supplied information. This function does not support matrix (2-D) barcodes such as QR codes. Use this function a maximum of two times per each single message or landing page.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value to convert into a bar code"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Type of bar code to create."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "numeric",
            "desc": "Width of bar code in pixels"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "numeric",
            "desc": "Height of bar code in pixels"
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "string",
            "desc": "Checksum value for bar code "
          },
          {
            "required": false,
            "ordinal": "6",
            "type": "boolean",
            "desc": "Display bar code value from string as text. A value of 0 displays provided alt text. A value of 1 displays barcode value as text."
          },
          {
            "required": false,
            "ordinal": "7",
            "type": "string",
            "desc": "Alt text to display if ordinal 6 contains a value of 1"
          },
          {
            "required": true,
            "ordinal": "8",
            "type": "int",
            "desc": "Orientation of the bar code. A value of 0 displays barcode horizontally. A value of 90 rotates the barcode 90 degrees to the right. A value of 180 rotates the barcode 180 degrees. A value of 270 rotates the barcode 90 degrees to the left."
          },
          {
            "required": true,
            "ordinal": "9",
            "type": "boolean",
            "desc": "Display a transparent background for the barcode. A value of 0 does not display a transparent background. A value of 1 displays a transparent background."
          }
        ]
      },
      "BeginImpressionRegion": {
        "title": "BeginImpressionRegion",
        "description": "Denotes the beginning of a region to track with impression tracking.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Static constant containing name of impression region"
          }
        ]
      },
      "BuildOptionList": {
        "title": "BuildOptionList",
        "description": "Builds a list of options from which a message recipient can select. Repeat value and presentation names for all options on the list.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Option selected by default"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value of first option on list"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Presentation name of first option on list"
          }
        ]
      },
      "BuildRowSetFromString": {
        "title": "BuildRowSetFromString",
        "description": "Creates a rowset from a character string by splitting the string at the specified delimiter.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value used to create rowset"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Character used as delimiter, such as a comma."
          }
        ]
      },
      "BuildRowSetFromXML": {
        "title": "BuildRowSetFromXML",
        "description": "Creates a rowset from XML. This function can return an empty rowset on error. This function is for use at send time only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "XML within the node"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "XPATH argument that specifies the XML node for use in building the rowset"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Indicates whether to return an empty rowset on error. A value of 0 does not return an empty rowset. A value of 1 returns an empty rowset."
          }
        ]
      },
      "ContentArea": {
        "title": "ContentArea",
        "description": "For classic content, returns content contained in the specified stored content area. For Content Builder, use <a href=\"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/contentblockbyid.htm\">ContentBlockById</a>.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "The ID of the content area to return"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the impression region to start"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Determines whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error. Defaults to true."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs. Defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "numeric",
            "desc": "Output parameter that returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area."
          }
        ]
      },
      "ContentAreaByName": {
        "title": "ContentAreaByName",
        "description": "Returns the content contained in the specified stored content area.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the content area to return, including the path within the my contents folder if necessary"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the impression region to start"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Determines whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error. Defaults to true."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs. Defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "numeric",
            "desc": "Output parameter that returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area."
          }
        ]
      },
      "ContentBlockbyId": {
        "title": "ContentBlockbyId",
        "description": "Returns content contained in the specified stored content block or code snippet from Content Builder, including the Image Block type. These functions support email messages only. For text-only parts of the email or mobile message, such as From Address, From Name, or Subject Line, reference the code snippet block.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "The ID of the content block to return"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the impression region to start"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Determines whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error. Defaults to true."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs. Defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "numeric",
            "desc": "Output parameter that returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area."
          }
        ]
      },
      "ContentBlockbyKey": {
        "title": "ContentBlockbyKey",
        "description": "Returns content contained in the specified stored content block or code snippet from Content Builder, including the Image Block type. These functions support email messages only. For text-only parts of the email, such as From Address, From Name, or Subject Line, reference the code snippet block.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key of the content block to return"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the impression region to start"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Determines whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error. Defaults to true."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs. Defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "numeric",
            "desc": "Output parameter that returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area."
          }
        ]
      },
      "ContentBlockbyName": {
        "title": "ContentBlockbyName",
        "description": "Returns content contained in the specified stored content block or code snippet from Content Builder, including the Image Block type. These functions support email messages only. For text-only parts of the email, such as From Address, From Name, or Subject Line, reference the code snippet block.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the content block to return"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the impression region to start"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Determines whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error. Defaults to true."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs. Defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "numeric",
            "desc": "Output parameter that returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area."
          }
        ]
      },
      "ContentImagebyID": {
        "title": "ContentImagebyID",
        "description": "Returns an img tag with the src attribute containing the path to an image from Content Builder. Identify the image to include with the ID value. The img tag includes the title and alt information for the selected image, as well as a border value (measured in pixels) and any identified thid value. If the value of the first parameter does not link to a valid image, you can include another image value for the second parameter as a default option. Use only with Image-type content in Content Builder. This function does not work with the Image Block type.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "ID of image to return"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value used to return image if function cannot find the original image ID"
          }
        ]
      },
      "ContentImagebyKey": {
        "title": "ContentImagebyKey",
        "description": "Returns an img tag with the src attribute containing the path to an image from Content Builder. Identify the image to include with the ID value. The img tag includes the title and alt information for the selected image, as well as a border value (measured in pixels) and any identified thid value. If the value of the first parameter does not link to a valid image, you can include another image value for the second parameter as a default option. Use only with Image-type content in Content Builder. This function does not work with the Image Block type.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key of image to return"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value used to return image if function cannot find the original image ID"
          }
        ]
      },
      "CreateSmsConversation": {
        "title": "CreateSmsConversation",
        "description": "Creates a conversation with the specified MO user. Use this AMPscript function for MobileConnect. You cannot use this function with conversation-based templates, including Double Opt-In or Info Capture. Because this function always returns a true value, don't use this function as part of a decision-making workflow.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Short code used for SMS communication"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Mobile number value used to begin the conversation. You can use MOBILE_NUMBER to pass in the value as necessary."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Keyword to use for the NEXT keyword function"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "App used in the conversation. Enter MOBILECONNECT."
          }
        ]
      },
      "EndImpressionRegion": {
        "title": "EndImpressionRegion",
        "description": "Identifies the end of a region to be tracked by impression tracking.",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "boolean",
            "desc": "Indicates whether this function ends all previous impression regions. The end of the message implicitly closes all impression regions not explicitly closed."
          }
        ]
      },
      "EndSmsConversation": {
        "title": "EndSmsConversation",
        "description": "End any current conversation on an SMS response from an MO user. Use this AMPscript function for MobileConnect. You cannot use this function with conversation-based templates, including Double Opt-In or Info Capture. Becase this function always returns a true value, don't use this function as part of a decision-making workflow.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Short code used for SMS communication"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "The mobile number value used to end the conversation. You can use MOBILE_NUMBER to pass in the value as necessary."
          }
        ]
      },
      "GetPortfolioItem": {
        "title": "GetPortfolioItem",
        "description": "Returns the text value of a Portfolio item.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External Key of the Portfolio item"
          }
        ]
      },
      "Image": {
        "title": "Image",
        "description": "Returns an img tag with the src attribute containing the path to an image from your portfolio. Identify the image to include with the external key value. The img tag includes the title and alt information for the selected image, as well as a border value measured in pixels and any identified thid value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key value of the image in your Portfolio"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "External key value of a default image if the function does not find the first image parameter"
          }
        ]
      },
      "SetSmsConversationNextKeyword": {
        "title": "SetSmsConversationNextKeyword",
        "description": "Sets the keyword for the next conversation path based on an SMS response from an MO user. Use the current keyword or a new keyword for a different conversation path. You can use this AMPscript function for MobileConnect. This function does not create a new conversation. SetSMSConversationNextKeyword directs the current conversation to the next keyword to use as part of that overall conversation. You cannot use this function with conversation-based templates, including Double Opt-In or Info Capture",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Short code of the SMS service"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "MOBILE_NUMBER variable for the user's mobile number"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Keyword name to set as the next conversation keyword"
          }
        ]
      },
      "TransformXML": {
        "title": "TransformXML",
        "description": "Applies an XSL transform to an XML document.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "XML to transform"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "XSL document used in the transformation"
          }
        ]
      },
      "TreatAsContent": {
        "title": "TreatAsContent",
        "description": "Treats the string as though it came in from a content area. To retrieve tracking information associated with these strings, wrap the embedded links within your HTML content using the HTTPGETWRAP command for tracking and analytics. Use the TreatAsContentArea() function to treat your string as if it came from a content area.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to return as content"
          }
        ]
      },
      "TreatAsContentArea": {
        "title": "TreatAsContentArea",
        "description": "Treats content retrieved from a data extension or other source as though it is fixed content coming from a content area.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Key value used to identify the content specified in the second string. Use the same key to identify distinct text and HTML versions of the content, as the function treats a key in a text content as distinct from a key in a HTML context. The application processes all keys in a case-insensitive manner."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Content stored for an email send under the key specified in the first string. Retrieve content using the HTTPGET() or Lookup() AMPscript functions."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Impression region name for the virtual content area used for tracking purposes"
          }
        ]
      },
      "WAT": {
        "title": "WAT and WATP",
        "description": "returns the values of the Web Analytics Tracking (WAT) parameter with the specified external key. Contact Marketing Cloud Support to set the external key values in the Web Analytics Connector. The function substitutes optional parameters for calls to the WATP function within the tracking parameter set in the Sender Profile. The WAT call parameters must use constant or numeric values. Variable, attribute, field, and faction values don't allow job-level resolution to the desired link query string parameters.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to perform the match against"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value used to replace the WATP function tracking parameter"
          }
        ]
      }
    }
  },
  "dataextension": {
    "title": "String",
    "description": "Use these functions to interact with data extensions contained in your Marketing Cloud account. When working with a data extension in the top level of an Enterprise or Enterprise 2.0 account or with a shared data extension in an Enterprise 2.0 account, add the prefix ENT. to the data extension.",
    "functions": {
      "ClaimRow": {
        "title": "ClaimRow",
        "description": "This function returns a row from a data extension and locks the row to prevent the information from use in another context until the row claimed status changes. If the function finds a row with the correct matching set of keys, the function returns those values. If the function finds no claimed row, the function sets key values in an unclaimed row and returns that row. If the function returns no row at all, you must set up the function to raise an error, ignore the result, or provide default content. Specify multiple pairs of column names and values as needed.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension for claim or retrieve action"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column used to identify claimed row"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of data extension key column"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value of data extension key column"
          }
        ]
      },
      "ClaimRowValue": {
        "title": "ClaimRowValue",
        "description": "This function returns a value from a data extension and locks the row to prevent the information from use in another context until the value claimed status changes. If the function finds a row with the correct matching set of keys, the function returns the requested column value. If the function finds no claimed row, the function attempts to claim an unused row. If the function cannot find or claim value, the function returns the specified default value. Otherwise, the function returns an error. Specify multiple pairs of column names and values as needed.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension for claim or retrieve action"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column in data extension from which to retrieve the return value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of column in data extension that indicates a claimed or unclaimed row"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default value to use in case the function fails to claim a row"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Name of the data extension key column"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value of data extension key column"
          }
        ]
      },
      "DataExtensionRowCount": {
        "title": "DataExtensionRowCount",
        "description": "Returns the number of rows in the specified data extension. Use this function in place of a Lookup() call when only counting the number of rows in a data extension.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to derive specified row count"
          }
        ]
      },
      "DeleteData": {
        "title": "DeleteData",
        "description": "Deletes rows in a data extension with column values specified in name value pairs. Returns the number of rows affected. You can also use this function with SMS data.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to delete specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column used to identify rows to delete."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value used to identify rows to delete."
          }
        ]
      },
      "DeleteDE": {
        "title": "DeleteDE",
        "description": "Deletes rows in a data extension with column values specified in name value pairs. Returns no value. Use this function with email messages at send time only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to delete the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column used to identify rows to delete."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value used to identify rows to delete."
          }
        ]
      },
      "ExecuteFilter": {
        "title": "ExecuteFilter",
        "description": "Executes a predefined data filter and returns a rowset containing the results. Use this function only in landing page contexts. You must use a data extension as the data source for the data filter. This function does not work with profile attributes.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key of data filter to execute"
          }
        ]
      },
      "ExecuteFilterOrderedRows": {
        "title": "ExecuteFilterOrderedRows",
        "description": "Executes a predefined data filter and returns a rowset containing the results. You must use a data extension as the data source for the data filter. This function does not work with profile attributes. This function also allows you to control the sort order and maximum number of rows in the resulting rowset. Use this function only with landing pages and SMS messages.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key of data filter to execute"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Maximum number of rows to return. A value of 0 returns all rows."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of column used to sort resulting rowset"
          }
        ]
      },
      "Field": {
        "title": "Field",
        "description": "Returns the specified field in the specified row or property value from an API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Row from which to return the field, or object from which to return the attribute"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the field or attribute to return"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Indicates whether to return a NULL value or an error if the specified data extension field does not exist. Adding a `0` will return a `NULL` value if data extension field does not exist. Defaults to `1`."
          }
        ]
      },
      "InsertData": {
        "title": "InsertData",
        "description": "Inserts a row in a data extension. Returns the number of rows affected. Use this function with landing pages, SMS and MMS messages in MobileConnect, push messages in MobilePush, and messages in GroupConnect.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Data extension from which to insert specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column used to build insert clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value of column used to build insert clause"
          }
        ]
      },
      "InsertDE": {
        "title": "InsertDE",
        "description": "Inserts a row in a data extension with the column values listed in name and value pairs. You can include multiple name and value pairs as necessary. Returns no value. Use this function with email messages at send time only. No value is returned. This function applies to email messages at send time only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the data extension from which to insert the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Column name used to build insert clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Column value used to build insert clause"
          }
        ]
      },
      "Lookup": {
        "title": "Lookup",
        "description": "Returns specified value from a data extension. You can specify multiple additional field and value pairs as part of an AND clause.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to return the specified value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column from which to return a value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of column used to identify row containing lookup value"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value to match string against"
          }
        ]
      },
      "LookupOrderedRows": {
        "title": "LookupOrderedRows",
        "description": "Returns a specified number of rows. You can specify multiple additional field and value pairs as part of an AND clause. The function returns an empty set when no values match.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to return specified rows"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of rows to return. A value less than 1 returns the default 2000 rows. This limitation enhances script performance."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Defines order of return as field ASC or field DESC"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Field to use to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value to use to build WHERE clause"
          }
        ]
      },
      "LookupOrderedRowsCS": {
        "title": "LookupOrderedRowsCS",
        "description": "Returns a specified number of rows. Treats any string value in a case-sensitive manner. You can specify multiple additional field and value pairs as part of an AND clause. The function returns an empty set when no values match.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to return specified rows"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of rows to return. A value less than 1 returns the default 2000 rows. This limitation enhances script performance."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Defines order of return as field ASC or field DESC"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Field to use to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value to use to build WHERE clause"
          }
        ]
      },
      "LookupRows": {
        "title": "LookupRows",
        "description": "Returns a rowset from a data extension where the field matches the specified value. Specify additional field value pairs as part of an AND clause. This function returns a maximum of 2000 rows. To better control the number or the order of returned rows, use the LookupOrderedRows() function. This limitation enhances script performance.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to return specified rows"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Column name used to identify rows to return"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value used to match rows to return"
          }
        ]
      },
      "LookupRowsCS": {
        "title": "LookupRowsCS",
        "description": "Returns a rowset from a data extension where the field matches the specified value. The system treats strings as case-sensitive. Specify additional field value pairs as part of an AND clause. This function returns a maximum of 2000 rows. To better control the number or the order of returned rows, use the LookupOrderedRowsCS() function. This limitation enhances script performance.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to return specified rows"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Column name used to identify rows to return"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value used to match rows to return"
          }
        ]
      },
      "Row": {
        "title": "Row",
        "description": "Returns specified row from specified rowset or array",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Specified rowset"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Count of row to return"
          }
        ]
      },
      "RowCount": {
        "title": "RowCount",
        "description": "Returns number of rows in specified rowset or array",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Specified rowset"
          }
        ]
      },
      "UpdateData": {
        "title": "UpdateData",
        "description": "Updates an existing row in a data extension for the specified number of columns used to build the where clause listed in name value pairs followed by a list of columns to be updated in name value pairs. Returns the number of rows affected. Use this function with landing pages and SMS messages only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to update the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of columns used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Column name to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Column name to build INSERT clause"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value used to build INSERT clause"
          }
        ]
      },
      "UpdateDE": {
        "title": "UpdateDE",
        "description": "Updates an existing row in a data extension for the specified number of columns used to build the where clause listed in name value pairs followed by a list of columns to be updated in name value pairs. Returns no value. Use this function with email messages at send time only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to update the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of columns used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Column name to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Column name to build INSERT clause"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value used to build INSERT clause"
          }
        ]
      },
      "UpsertData": {
        "title": "UpsertData",
        "description": "Updates an existing row in a data extension for the specified number of filter columns listed in name value pairs followed by a list of columns to be updated in name and value pairs. If no data exists in that row, the function inserts a row. The function returns the number of affected rows. You can include multiple name and value pairs to build your WHERE and INSERT clauses. Use this function with landing pages and SMS messages only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to update the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of columns used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Column name to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Column name to build INSERT clause"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value used to build INSERT clause"
          }
        ]
      },
      "UpsertDE": {
        "title": "UpsertDE",
        "description": "Updates an existing row in a data extension for the specified number of filter columns listed in name value pairs followed by a list of columns to be updated in name and value pairs. If no data exists in that row, the function inserts a row. The function returns the number of affected rows. You can include multiple name and value pairs to build your WHERE and INSERT clauses. Use this function with email messages at send time only.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which to update the specified row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of columns used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Column name to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value used to build WHERE clause"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Column name to build INSERT clause"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value used to build INSERT clause"
          }
        ]
      }
    }
  },
  "datetime": {
    "title": "String",
    "description": "Use these functions to include and manipulate date and time data within an email message or landing page.",
    "functions": {
      "DateAdd": {
        "title": "DateAdd",
        "description": "Returns the sum of a date and an integer, along with a time stamp.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "Date",
            "desc": "Date to add using MM/dd/yyyy or YYYY-MM-DD values"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Integer to add"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Unit of time of the integer. Valid values include Y, M, D, H, and MI."
          }
        ]
      },
      "DateDiff": {
        "title": "DateDiff",
        "description": "Returns the difference between two dates.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "Date",
            "desc": "Starting date for comparison using either MM/dd/yyyy or YYYY-MM-DD format"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "Date",
            "desc": "Date to subtract from starting date using either MM/dd/yyyy or YYYY-MM-DD format"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Unit of time of the difference. Valid values include Y, M, D, H, or MI"
          }
        ]
      },
      "DateParse": {
        "title": "DateParse",
        "description": "Returns a DateTime object from a date string.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "date",
            "desc": "Date string used to derive the DateTime object"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "boolean",
            "desc": "Determines whether the system returns the object in UTC format. A value of true returns the DateTime object as UTC."
          }
        ]
      },
      "DatePart": {
        "title": "DatePart",
        "description": "Returns a specified part of a date.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "Date",
            "desc": "Date value used to retrieve a specified part using either MM/dd/yyyy or YYYY-MM-DD format"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "The part of the date to retrieve. Valid values include Y, M, D, H, or MI"
          }
        ]
      },
      "FormatDate": {
        "title": "FormatDate",
        "description": "Formats a specified string as a date value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value to receive the specified formatting using either MM/dd/yyyy or YYYY-MM-DD format"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Date format string used to format the specified value. A value of l returns a long text value. A value of s returns a short text value. A value of iso returns an ISO-compliant value. A value of rfc returns a RFC-1123-compliant value."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Time format string used the formation the specified value"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Culture code used to indicate the correct date format"
          }
        ]
      },
      "GetSendTime": {
        "title": "GetSendTime",
        "description": "After a list, data extension (DE), or manual send, GetSendTime returns either the date and time that the send started or the date and time that the send is completed for the individual subscriber. After a triggered or journey send, this function returns either the date and time that the send was published or the date and time that the send was completed for the individual subscriber. GetSendTime is in Central Standard Time (CST) without daylight saving time.",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "boolean",
            "desc": "Determines whether to show the same send time for all subscribers in a job. For list or data extension sends, a value of true returns the job start time. For triggered or journey sends, a value of true returns the publish time."
          }
        ]
      },
      "LocalDateToSystemDate": {
        "title": "LocalDateToSystemDate",
        "description": "Converts a local datetime string or object to the system time.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Local time to convert"
          }
        ]
      },
      "Now": {
        "title": "Now",
        "description": "Returns the current system (server) date and time. When included in content for triggered sends, the time indicates when the triggered send definition for the message started or republished. The time does not not reflect when the send actually occurred. Now() is in Central Standard Time (CST) without daylight saving time.",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "boolean",
            "desc": "Determines whether to preserve the email sent time for post-send resolution of Now(). A value of true preserves the email sent time."
          }
        ]
      },
      "SystemDateToLocalDate": {
        "title": "SystemDateToLocalDate",
        "description": "Converts a system datetime string or object to the Marketing Cloud user's local time.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "Date",
            "desc": "System time to convert"
          }
        ]
      }
    }
  },
  "encryption": {
    "title": "Encryption",
    "description": "Use these functions to encrypt or decrypt data.",
    "functions": {
      "Base64Decode": {
        "title": "Base64Decode",
        "description": "Decodes Base64 information into human-readable text.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Location of Base64 text, either in variable or data extension field via Lookup() AMPscript function"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": ".NET-supported character type used in decoding process, such as UTF-8 or UTF-16"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "int",
            "desc": "Indicates whether the email send proceeds with incorrectly coded Base64 text. A value of 0 allows the send to proceed if send encounters an error. A value of 1 prevents the send from continuing if send encounters an error. Value defaults to 1."
          }
        ]
      },
      "Base64Encode": {
        "title": "Base64Encode",
        "description": "Encodes human-readable text into Base64 information.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "TLocation of text to encrypt, either in a variable or data either in variable or data extension field via Lookup() AMPscript function"
          }
        ]
      },
      "DecryptSymmetric": {
        "title": "DecryptSymmetric",
        "description": "This function decrypts encrypted data using the supplied algorithm and encryption values. Supply either a value or a valid external key for the password, initialization vector (IV), and salt. You can also use the external keys if you previously created keys in the Key Management section of the Marketing Cloud app. Otherwise, the function generates a password using the password parameter or stored value, the salt parameter or stored value, and the IV parameter or stored value. If you don't pass or reference an initialization vector, the function uses the password parameter or stored value as the initialization vector. This function treats Salt and IV values either directly provided or looked up by key as hex strings, with each pair of characters representing a single byte in the larger strings. Don't attempt to use these values as a cipher string, as you cannot successfully decrypt those strings using this function. You can wrap the EncryptSymmetric() and DecryptSymmetric() functions in Base64Encode() and Base64Decode() functions to view the final string in plain text. You can only use the EncryptSymmetric() and DecryptSymmetric() AMPscript function on data contained within Marketing Cloud. Marketing Cloud does not support the use of these functions in conjunction with outside or third-party encryption and decryption functionality.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Encrypted data passed to function"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Algorithm used to encrypt the data. Valid values include aes, des, and tripledes."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Password external key"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Password"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Salt external key"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Salt value"
          },
          {
            "required": true,
            "ordinal": "7",
            "type": "string",
            "desc": "Initialization vector external key"
          },
          {
            "required": true,
            "ordinal": "8",
            "type": "string",
            "desc": "Initialization vector value"
          }
        ]
      },
      "EncryptSymmetric": {
        "title": "EncryptSymmetric",
        "description": "This function encrypts plain text data using the supplied algorithm and encryption values. You can supply either a value or a valid external key for the password, initialization vector (IV), and salt. You can also use the external keys if you previously created keys in the Key Management section of the user interface. Otherwise, the function generates a password using the password parameter or stored value, the salt parameter or stored value, and the IV parameter or stored value. If you don't pass or reference an initialization vector, the function uses the password parameter or stored value as the initialization vector. All output provided by this function uses Base64 encoding. This function treats salt and IV values either directly provided or looked up by key as hex strings, with each pair of characters representing a single byte in the larger strings. Don't attempt to use these values as a cipher string, as you cannot successfully encrypt those strings using this function. You can wrap the EncryptSymmetric() and DecryptSymmetric() functions in Base64Encode() and Base64Decode() functions to view the final string in plain text. You can only use the EncryptSymmetric() and DecryptSymmetric() AMPscript function on data contained within Marketing Cloud. Marketing Cloud does not support the use of these functions in conjunction with outside or third-party encryption and decryption functionality.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Plain text data passed to the function"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Algorithm used to encrypt the data. Valid values include aes, des, and tripledes."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Password external key"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Password"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Salt external key"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Salt value"
          },
          {
            "required": true,
            "ordinal": "7",
            "type": "string",
            "desc": "Initialization vector external key"
          },
          {
            "required": true,
            "ordinal": "8",
            "type": "string",
            "desc": "Initialization vector value"
          }
        ]
      },
      "GUID": {
        "title": "GUID",
        "description": "Returns a new GUID as a string value.",
        "properties": [

        ]
      },
      "MD5": {
        "title": "MD5",
        "description": "Converts a string to a 16-byte MD5 hash value. This function returns a hex representation of the 16-byte MD5 hash result. This one-way hash conversion does not allow later decryption.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to convert to hex representation of the 16-byte MD5 hash result"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Character set to use for the encoding. This function defaults to UTC-8 if not specified. You can also specify UTC-16."
          }
        ]
      },
      "SHA1": {
        "title": "SHA1",
        "description": "Returns a SHA1 hash based on the string value passed through the function. The SHA1 hash tag returns a hexidecimal value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Alphanumeric string from which SHA1 hash tag derives"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Character set to use for the encoding. This function defaults to UTC-8 if not specified. You can also specify UTC-16."
          }
        ]
      },
      "SHA256": {
        "title": "SHA256",
        "description": "Returns an SHA256 hash tag based on the string value passed through the function.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Alphanumeric string from which SHA256 hash tag derives"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "The character set to use for the encoding; this function defaults to UTF-8 if not specified. You can also specify UTF-16."
          }
        ]
      },
      "SHA512": {
        "title": "SHA512",
        "description": "Returns an SHA512 hash tag based on the string value passed through the function.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Alphanumeric string from which SHA512 hash tag derives"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "The character set to use for the encoding; this function defaults to UTF-8 if not specified. You can also specify UTF-16."
          }
        ]
      }
    }
  },
  "http": {
    "title": "String",
    "description": "Use these functions to include and manipulate web content within email messages and landing pages.",
    "functions": {
      "HTTPGet": {
        "title": "HTTPGet",
        "description": "Returns the content from a specified URL. This function only works with HTTP on port 80 and HTTPS on port 443. Non-standard port assignments cause this function to fail. Marketing Cloud honors any character set returned in the HTTP headers via Content-Type. For example, you can use a UTF-8 encoded HTML file with <b>Content-Type: text/html; charset=utf-8</b> included in the header. If the encoding is not specified in the header, the application assumes all returned data will be in the character set <b>WindowsCodePage 1252</b>. You can change this default by contacting your Marketing Cloud account representative.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL from which to return content"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "boolean",
            "desc": "Defines whether the process continues on error. Defaults to false. A value of true ignores errors in process."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "int",
            "desc": "Defines whether the function allows empty content. A value of 0 allows for empty content. A value of 1 returns an error. A value of 2 skips the subscriber."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Output of function status. This function defaults to 0. A value of 0 indicates status is OK. A value of -1 indicates a missing URL. A value of -2 indicates an HTTP request error. A value of -3 indicates empty content; the function completed successfully but did not return any content."
          }
        ]
      },
      "HTTPPost": {
        "title": "HTTPPost",
        "description": "This function posts content to the specified URL. This function only works with HTTP on port 80 and HTTPS on port 443. Non-standard port assignments cause this function to fail. The Marketing Cloud honors any character set returned in the HTTP headers via Content-Type. For example, you can use a UTF-8 encoded HTML file with Content-Type: text/html; charset=utf-8 included in the header. If the header does not specify encoding, the application assumes all returned data will uses the character set WindowsCodePage 1252. You can change this default by contacting your Marketing Cloud account representative. Include as many header name and value pairs as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL to receive posted content"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Specified content-type header value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Content to post to specified URL"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Output parameter used to contain string representation for the status of the HTTP request, such as OK"
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "string",
            "desc": "Name of additional headers to add to HTTP POST request"
          },
          {
            "required": false,
            "ordinal": "6",
            "type": "string",
            "desc": "Value of additional headers to add to HTTP POST request"
          }
        ]
      },
      "HTTPPost2": {
        "title": "HTTPPost2",
        "description": "This function posts content to the specified URL. This function only works with HTTP on port 80 and HTTPS on port 443. Non-standard port assignments cause this function to fail. The Marketing Cloud honors any character set returned in the HTTP headers via Content-Type. For example, you can use a UTF-8 encoded HTML file with Content-Type: text/html; charset=utf-8 included in the header. If the header does not specify the encoding type, the application assumes all returned data uses the character set WindowsCodePage 1252. Change this default by contacting your Marketing Cloud account representative. Include as many name and value pairs as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL to receive posted content"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Specified content-type header value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Content to post to specified URL"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": " Indicates whether call returns an exception for error. True indicates the system returns an exception."
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Output parameter used to contain string representation for the status of the HTTP request, such as OK."
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Output parameter used to contain returned response body information from the HTTP POST request."
          },
          {
            "required": true,
            "ordinal": "7",
            "type": "string",
            "desc": "Name of additional headers to add to HTTP POST request"
          },
          {
            "required": true,
            "ordinal": "8",
            "type": "string",
            "desc": "Value of additional headers to add to HTTP POST request"
          }
        ]
      },
      "HTTPRequestHeader": {
        "title": "HTTPRequestHeader",
        "description": "Retrieves the specified header from an HTTP request. You can only use the standard HTTP headers outlined in RFC 7231 with this function. Use only in landing pages.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Header to retrieve from an HTTP request"
          }
        ]
      },
      "IsCHTMLBrowser": {
        "title": "IsCHTMLBrowser",
        "description": "Indicates if the passed-in user agent value represents a CHTML browser. CHTML browsers, such as those found on feature phones, use a modified version of HTML to display information on smaller screens with less resources than smartphones. Returns a value of true or false indicating whether the browser uses CHTML. Use this value to determine whether or not to display CHTML content. Use only with landing pages.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Header to retrieve from an HTTP request"
          }
        ]
      },
      "RedirectTo": {
        "title": "RedirectTo",
        "description": "Allows a client to specify the target of a link originate from a complete URL stored in an attribute, data extension field, or variable. Only use this function in HTML emails within the href attribute of an &lt;a&lt; tag. In text emails, include the prefix http:// and ensure you use no spaces within the parentheses. In order to retain tracking information for clicked links, you must include the anchor tags &lt;a&lt;/a&lt; within the email itself and not the link retrieved via AMPscript. This function only provides tracking information for clickable links within an email message. You cannot retrieve tracking information when using this function with URLs stored in a variable or used as part of a query string parameter.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL sting or variable containing URL string to which to redirect"
          }
        ]
      },
      "URLEncode": {
        "title": "URLEncode",
        "description": "Returns the specified URL with spaces replaced with %20 or fully encodes all non-alphanumeric characters.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String containing the URL and attribute value"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "boolean",
            "desc": "Value indicating how function handles illegal URL characters. A value of 0 replaces space in URL with %20. A value of 1 encodes any illegal characters used in URL, such as spaces or accented letters, in the query string of the given URL. This parameter defaults to 0."
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "boolean",
            "desc": "Value indicating how function encodes passed string values. A value of 0 encodes only portion of passed string following the ? character. A value of 1 encodes full passed string. This parameter defaults to 0."
          }
        ]
      },
      "WrapLongURL": {
        "title": "WrapLongURL",
        "description": "returns a wrapped URL for the long URL provided in the string parameter of the function. You can only modify URLs longer than 975 characters, and this function does not replace the standard link wrapping functionality implemented in the Marketing Cloud application. Use this function to mitigate a known limitation with long URLs in Microsoft Outlook 2007 and URLs such as those included in an image source tag.",
        "properties": [
          {
            "required": true,
            "ordinal": "`",
            "type": "string",
            "desc": "Long RL to be wrapped"
          }
        ]
      }
    }
  },
  "math": {
    "title": "Math Functions",
    "description": "Functions to used with numbers",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Returns the sum of the provided values.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "First value to add"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Second value to add"
          }
        ]
      },
      "Divide": {
        "title": "Divide",
        "description": "Returns the result of dividing the first argument by the second argument.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Dividend value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Divisor value, used to divide the dividend value"
          }
        ]
      },
      "FormatCurrency": {
        "title": "FormatCurrency",
        "description": "Formats a specified string as a currency value. This function rounds the numbers up if the specified format uses fewer decimal points than the value itself and the remaining numbers total 5 or more. The function rounds the numbers down if the specified format uses fewer decimal points than the value itself and the remaining numbers total less than 5.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Value to receive the specified formatting"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "ISO culture code used to indicate the correct currency unit"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "numeric",
            "desc": "The number of decimal places to include in the formatted value"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "The currency symbol to use with the value. This value overrides the value specified by the culture code."
          }
        ]
      },
      "FormatNumber": {
        "title": "FormatNumber",
        "description": "This function rounds decimal numbers up if the specified format uses fewer decimal points than the value itself and the remaining numbers are 5 or greater. The function rounds decimal numbers down if the specified format uses fewer decimal points than the value itself and the remaining numbers total less than 5. Integers outside the range of -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 print in scientific notation.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Value to receive the specified formatting."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Valid format type value: <ul>\n<li><strong>C</strong> - Currency</li>\n<li><strong>D</strong> - Decimal</li>\n<li><strong>E</strong> - Exponential</li>\n<li><strong>F</strong> - Fixed point</li>\n<li><strong>G</strong> - General</li>\n<li><strong>N</strong> - Number</li>\n<li><strong>P</strong> - Percent</li>\n<li><strong>R</strong> - Round-trip (format ensures value parsed to string can be parsed back to numeric value)</li>\n<li><strong>X</strong> - Hexadecimal</li>\n<li>You can optionally follow this code with a number to indicate the precision of the number. For example, a currency value with a precision of 2 uses the parameter <strong>C2</strong>.</li>\n</ul>"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Culture code used to indicate the correct date format"
          }
        ]
      },
      "Mod": {
        "title": "Mod",
        "description": "Returns the remainder after dividing the first number by the second number.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Dividend value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Divisor value"
          }
        ]
      },
      "Multiply": {
        "title": "Multiply",
        "description": "Returns the product of multiplying two numbers.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "First number"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Second number"
          }
        ]
      },
      "Random": {
        "title": "Random",
        "description": "Returns a random integer between the values you specify, inclusive.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "int",
            "desc": "Least value to return as the returned random integer"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "int",
            "desc": "Greatest value to return as the random integer"
          }
        ]
      },
      "Subtract": {
        "title": "Subtract",
        "description": "Returns the difference of two integers.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Initial numeric value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number to subtract from initial value"
          }
        ]
      }
    }
  },
  "microsoftdynamics": {
    "title": "String",
    "description": "String",
    "functions": {
      "AddMscrmListMember": {
        "title": "AddMscrmListMember",
        "description": "Adds the indicated record to the indicated marketing list. Does not return a value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "GUID of record to add to marketing list"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "GUID of marketing list receiving the record"
          }
        ]
      },
      "CreateMscrmRecord": {
        "title": "CreateMscrmRecord",
        "description": "Creates a single Dynamics CRM record in the target entity. Returns the GUID of the created record. Include multiple name and value pairs as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of Dynamics CRM entity for record to create"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Number of name and value pairs of fields to populate on created record"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of attribute to populate on created record"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value of attribute to populate on created record"
          }
        ]
      },
      "DescribeMscrmEntities": {
        "title": "DescribeMscrmEntities",
        "description": "Returns the logical name and display name of all Microsoft Dynamics CRM entities",
        "properties": [

        ]
      },
      "DescribeMscrmEntityAttributes": {
        "title": "DescribeMscrmEntityAttributes",
        "description": "returns the logical name, display name, and type of the Dynamics CRM entity. The results include a comma-separated list of option and display values when the attribute contains a Boolean, status, picklist, or state value.",
        "properties": [
          {
            "required": true,
            "ordinal": "entity",
            "type": "string",
            "desc": "Dynamics CRM entity from which to retrieve attributes"
          }
        ]
      },
      "RetrieveMscrmRecords": {
        "title": "RetrieveMscrmRecords",
        "description": "Retrieves multiple CRM records. Use fields in the target entity or select fields from related entities by using many-to-one lookup attributes.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of Dynamics CRM entity from which to retrieve records"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "A comma-separated list of fields to retrieve"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Field name to check value"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Operator to check value"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value to check"
          }
        ]
      },
      "RetrieveMscrmRecordsFetchXML": {
        "title": "RetrieveMscrmRecordsFetchXML",
        "description": "Takes a correctly formed Fetch XML query and returns the attributes specified in the query.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Dynamics CRM Fetch XML query"
          }
        ]
      },
      "SetStateMscrmRecord": {
        "title": "SetStateMscrmRecord",
        "description": "This function sets state and status of the indicated record and provides -1 as the status value for the default status of the state. Returns no value. Some entities, including Opportunity, require special CRM requests to change their state. This function will not work for those entities.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "GUID of the record to set state and status for"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of Dynamics CRM entity"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "State to set, such as Active or Inactive"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Status to set, such as 0 or 1"
          }
        ]
      },
      "UpdateMscrmRecords": {
        "title": "UpdateMscrmRecords",
        "description": "Updates one or more records in a Microsoft Dynamics CRM entity. Also returns the number of succesfully updated records. Include multiple name and value pairs for attributes to update on the target records as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of Microsoft Dynamics CRM entity receiving the updated records"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Comma-separated list of record GUIDs to update"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of attribute to update on target records"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value of attribute to update on target records"
          }
        ]
      },
      "UpsertMscrmRecord": {
        "title": "UpsertMscrmRecord",
        "description": "This function retrieves a single record from Microsoft Dynamics CRM, using the name and value pairs to filter the results. The function then sorts the results using the sort field and order provided. The process updates a found record with the applicable name and value pairs. If the process does not find a record, it creates one with all provided name and value pairs. This function returns the GUID of the updated or created record.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "The name of the Dynamics CRM entity for the record to upsert"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "The field used to sort the retrieve results"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "The order used to sort the retrieve results "
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "The number of Name/Value pairs of fields used to retrieve"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "stringa",
            "desc": "Name of attribute to filter on the target entity"
          },
          {
            "required": true,
            "ordinal": "6",
            "type": "string",
            "desc": "Value of attribute to filter on the target entity"
          },
          {
            "required": true,
            "ordinal": "7",
            "type": "string",
            "desc": "The number of Name/Value pairs of fields used to update"
          },
          {
            "required": true,
            "ordinal": "8",
            "type": "stringa",
            "desc": "Name of attribute to update on the target entity"
          },
          {
            "required": true,
            "ordinal": "9",
            "type": "string",
            "desc": "Value of attribute to update on the target entity"
          }
        ]
      }
    }
  },
  "salesforce": {
    "title": "String",
    "description": "Use these AMPscript functions to interact with your instance of the Salesforce Sales Cloud.",
    "functions": {
      "CreateSalesforceObject": {
        "title": "CreateSalesforceObject",
        "description": "Creates a record in your integrated Salesforce account and returns the ID of the record created. This function works only for an account integrated with a Salesforce account.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Type of object to create a record in, such as Lead or CustomObject"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of fields specified to add in the record"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of field"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Value of field."
          }
        ]
      },
      "LongSFID": {
        "title": "LongSFID",
        "description": "Returns the 18-character Salesforce ID from a shortened 15-character version.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "The 15-character Salesforce ID"
          }
        ]
      },
      "RetrieveSalesforceJobSources": {
        "title": "RetrieveSalesforceJobSources",
        "description": "Returns a rowset with SourceID, SourceType, and IsInclusionSource columns from the job with the specified ID. This function works only with version 2 of the Salesforce integration with Marketing Cloud. This function does not return any information on the status of the job itself. For example, the function returns the same information from a completed job as it does from a job that was started and then canceled. Don't use this information as a guarantee that the send completed. Because this function returns data as a rowset, use Row() and Field() to evaluate the data.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "null"
          }
        ]
      },
      "RetrieveSalesforceObjects": {
        "title": "RetrieveSalesforceObjects",
        "description": "Returns a rowset with the selected information from Salesforce objects that match the criteria you specify. This function works only with an account integrated with a Salesforce account. Include multiple sets of ordinals 3, 4, and 5 to retrieve information as necessary. Because this function returns data as a rowset, use Row() and Field() to evaluate the data.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Type of object from which to retrieve information, such as Lead or CustomObject"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": " Names of fields from which to retrieve information, including multiple comma-separated values such as FirstName,LastName"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Names of fields used to match the record for selection as a WHERE clause. Include only one field name for this parameter."
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Operator used to compare the fifth ordinal to the third ordinal. Valid values include: <ul>\n<li>= (is equal to)</li>\n<li>< (is less than)</li>\n<li>> (is greater than)</li>\n<li>!= (is not equal to)</li>\n<li><= (is less than or equal to)</li>\n<li>>= (is greater than or equal to)</li>\n</ul>\n<br>You may add additional name, operator and value parameters for more complex filtering."
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value to compare to the third ordinal for record selection. You may add additional name, operator, and value parameters for more complex filtering. This function joins these WHERE clauses with AND only."
          }
        ]
      },
      "UpdateSingleSalesforceObject": {
        "title": "UpdateSingleSalesforceObject",
        "description": "Updates a record in an object in your integrated Salesforce account. You can specify multiple additional field and value pairs as part of an AND clause. Returns 1 for success or 0 for failure.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Type of object to update, such as Lead or CustomObject."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "The ID of the object to update."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "The name of the field to update."
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "The value to update the field with."
          }
        ]
      }
    }
  },
  "sites": {
    "title": "String",
    "description": "Use these functions to interact with microsites and landing pages within your Marketing Cloud account. Contact your Marketing Cloud account representative for more information.",
    "functions": {
      "AuthenticatedEmployeeID": {
        "title": "AuthenticatedEmployeeID",
        "description": "Returns the employee ID of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "AuthenticatedEmployeeNotificationAddress": {
        "title": "AuthenticatedEmployeeNotificationAddress",
        "description": "Returns the notification email address of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "AuthenticatedEmployeeUserName": {
        "title": "AuthenticatedEmployeeUserName",
        "description": "Returns the username of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "AuthenticatedEnterpriseID": {
        "title": "AuthenticatedEnterpriseID",
        "description": "Returns the enterprise ID of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "AuthenticatedMemberID": {
        "title": "AuthenticatedMemberID",
        "description": "Returns the member ID of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "AuthenticatedMemberName": {
        "title": "AuthenticatedMemberName",
        "description": "Returns the member name of the authenticated landing page user. Use this function only with Microsites when using Sender Authenticated Redirection. Not for use with CloudPages.",
        "properties": [

        ]
      },
      "CloudPagesURL": {
        "title": "CloudPagesURL",
        "description": "Provides a way for users to reference a CloudPages URL in an account from an email message. Use this function in an email to pass information via a URL in an encrypted query string. For example, you could share a single unsubscription or profile center page for use in any sent email message. This method passes information in an encrypted query string without passing subscriber information or values in clear text.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Page ID for the landing page reference in the URL. Locate this value on the appropriate CloudPage content details page. Page ID can be from the enterprise (EID) or the business unit (MID) where the function is used."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name for additional parameter included in encrypted query string"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value for additional parameter included in encrypted query string"
          }
        ]
      },
      "IsNullDefault": {
        "title": "IsNullDefault",
        "description": "Returns the test data when not null. If null, the function returns the specified value. Smart Capture forms use this function to return a default value for a blank or non-existent Smart Capture form value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value to return for non-null occurrences"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value to return for null occurrences"
          }
        ]
      },
      "LiveContentMicrositeURL": {
        "title": "LiveContentMicrositeURL",
        "description": "Provides a way to return a microsite URL by referencing a coupon name hosted on a microsite.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Content type - at this time, the only valid value for this argument is coupon"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of live content referenced"
          }
        ]
      },
      "MicrositeURL": {
        "title": "MicrositeURL",
        "description": "Provides a way for Enterprise 2.0 users to reference a landing page URL in the top-level business unit in an Enterprise 2.0 account from an email message in any child business unit within the same Enterprise 2.0 account. Use this function in an email to pass information via a URL in an encrypted query string. For example, you could share a single unsubscription or profile center page from the top-level account for use in email messages sent from any child business units within that account. This method passes information in an encrypted query string without passing subscriber information or values in clear text.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "int",
            "desc": "Page ID for the landing page referenced in URL"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Name for additional parameters included in encrypted query string"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Value for additional parameters included in encrypted query string"
          }
        ]
      },
      "QueryParameter": {
        "title": "QueryParameter",
        "description": "Retrieves the value from a query string, based on the key defined for it. Use this function to provide information on users visiting a site via the URL.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Key used to pull value"
          }
        ]
      },
      "Redirect": {
        "title": "Redirect",
        "description": "Redirects the recipient's browser to the specified URL.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL used for redirect"
          }
        ]
      },
      "RequestParameter": {
        "title": "RequestParameter",
        "description": "Returns the value of a parameter passed into the query string of a landing page URL or passed via a form post.",
        "properties": [
          {
            "required": true,
            "ordinal": "queryParam",
            "type": "string",
            "desc": "Parameter from which to request value"
          }
        ]
      }
    }
  },
  "social": {
    "title": "String",
    "description": "Use these functions to interact with social networking services via email messages or landing pages contained in your Marketing Cloud account.",
    "functions": {
      "GetPublishedSocialContent": {
        "title": "GetPublishedSocialContent",
        "description": "Returns content to share on a social network as specified by the region ID. For use only in landing pages or the Social Forward feature.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Region ID for the social content area"
          }
        ]
      },
      "GetSocialPublishURL": {
        "title": "GetSocialPublishURL",
        "description": "Retrieves the URL of a social network from a lookup table and creates a link to that social network for use with content to be shared from an email. The optional pairs of parameters refer to additional information like ShareThis publisher ID numbers and logins. You can include multiple name and value pairs. Use this function with the Social Forward feature.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "Number of the social network on the lookup table"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of the content area to share to the social network"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Name of optional parameter"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Value of optional parameter"
          }
        ]
      },
      "GetSocialPublishURLByName": {
        "title": "GetSocialPublishURLByName",
        "description": "Returns the URL to the publish content page, including a site name, country code, a region ID, and optional pairs of parameter information, such as ShareThis ID information. Include mulitple name and value pairs. For use with the Social Forward feature of Marketing Cloud.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the social network to which to share information"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Applicable country code for the social network, as defined by the ISO"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Region ID of the content shared to the social network"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Name of optional parameter"
          },
          {
            "required": true,
            "ordinal": "value",
            "type": "string",
            "desc": "Value of optional parameter"
          }
        ]
      }
    }
  },
  "string": {
    "title": "String Functions",
    "description": "Functions to used with strings",
    "functions": {
      "Char": {
        "title": "Char",
        "description": "Returns the ASCII character specified by the ASCII character code in the first parameter. An optional second parameter specifies the number of times to repeat the return of the ASCII character.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "ASCII character code"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of times to repeat the ASCII character "
          }
        ]
      },
      "Concat": {
        "title": "Concat",
        "description": "Concatenates the strings specified in the arguments. Include as many values as necessary.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "First string value to concatenate"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Second string value to concatenate"
          }
        ]
      },
      "Format": {
        "title": "Format",
        "description": "Formats the value according to the string you specify.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Variable to format"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "A C# compatible format string: <ul>\n<li>MM/dd/yyyy</li>\n<li>Cn - currency format where n represents the number of decimal places</li>\n</ul>"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "string",
            "desc": "Indicates data format of value. Valid values include Date and Number."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Culture code used to indicate the correct date format."
          }
        ]
      },
      "IndexOf": {
        "title": "IndexOf",
        "description": "Returns character position where string occurs in the variable. Index numbering begins with 1.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Variable to analyze"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Character position to return"
          }
        ]
      },
      "Length": {
        "title": "Length",
        "description": "Returns the number of characters in the specified string.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to evaluate"
          }
        ]
      },
      "Lowercase": {
        "title": "Lowercase",
        "description": "Returns the specified value in all lowercase letters.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Specified string value"
          }
        ]
      },
      "ProperCase": {
        "title": "ProperCase",
        "description": "Returns specified string with initial letter of each word capitalized.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to return with initial capitalization"
          }
        ]
      },
      "RegExMatch": {
        "title": "RegExMatch",
        "description": "Allows you to use a regular expression to search for information in a string. Use any value from the .NET RegexOptions enumeration, such as IgnoreCase and Multiline.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to search"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Regular expression to use in the search"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Name or ordinal of the matching group to return"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Repeating string parameter of regular expression options to use"
          }
        ]
      },
      "Replace": {
        "title": "Replace",
        "description": "Replaces the first string value with the second string value anywhere it is found in the variable.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Variable with value to replace"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "String to replace"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "String used as replacement"
          }
        ]
      },
      "ReplaceList": {
        "title": "ReplaceList",
        "description": "Searches a string value for one or more string values you specify and replaces those values with another string value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String value to search"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Replacement string"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "String values to replace using replacement string"
          }
        ]
      },
      "StringToDate": {
        "title": "StringToDate",
        "description": "Parses a datetime string with the user's current settings and returns a .NET datetime object.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to parse"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Character set used for encoding. This function defaults to UTC-8 if not specified. You can also specify UTC-16."
          }
        ]
      },
      "StringToHex": {
        "title": "StringToHex",
        "description": "Returns the hex string of bytes that make up a string value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to encode"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Character set used for encoding. This function defaults to UTC-8 if not specified. You can also specify UTC-16."
          }
        ]
      },
      "Substring": {
        "title": "Substring",
        "description": "Returns the portion of the specified string starting with the specified character position and no longer than the specified length. If the specified character position exceeds the length of the specified string, the function returns an empty string.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Initial string value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Character position used to begin substring"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "numeric",
            "desc": "Maximum length of substring"
          }
        ]
      },
      "Trim": {
        "title": "Trim",
        "description": "Returns the value of the string parameter with the leading and trailing white space removed.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String value"
          }
        ]
      },
      "Uppercase": {
        "title": "Uppercase",
        "description": "Returns the specified value in all uppercase letters.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value to return"
          }
        ]
      }
    }
  },
  "utilities": {
    "title": "String",
    "description": "String",
    "functions": {
      "AttributeValue": {
        "title": "AttributeValue",
        "description": "Returns the value of a subscriber attribute.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of attribute to return"
          }
        ]
      },
      "Domain": {
        "title": "Domain",
        "description": "Returns domain portion of an email address.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Email address"
          }
        ]
      },
      "Empty": {
        "title": "Empty",
        "description": "Returns True if the value is the empty string or NULL.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Variable to evaluate"
          }
        ]
      },
      "IIf": {
        "title": "IIf",
        "description": "Returns the second parameter if the first parameter evaluates True. Returns the third parameter if the first parameter evaluates False.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Any function or expression that returns a true or false result."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value to return if the expression evaluates True"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Value to return if the expression evaluates False"
          }
        ]
      },
      "IsEmailAddress": {
        "title": "IsEmailAddress",
        "description": "Returns a true or false result indicating whether the string value passed in contains a valid email address. This function uses the same email validation logic as the rest of the application.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Email address to validate"
          }
        ]
      },
      "IsNull": {
        "title": "IsNull",
        "description": "Returns a true value if the specified parameter is null.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Function or variable that returns a nullor non-null result."
          }
        ]
      },
      "IsPhoneNumber": {
        "title": "IsPhoneNumber",
        "description": "Returns a true or false result indicating whether the string value passed in is a valid phone number. This function uses the same phone number validation as the SMS components of the application.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Phone number to evaluate"
          }
        ]
      },
      "Output": {
        "title": "Output",
        "description": "Returns the results of AMPscript code executed within a code block, such as Concat() or V(),  and includes the results inside the rendered content. The function does not return any passed direct literals.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Code used to produce results output by system"
          }
        ]
      },
      "OutputLine": {
        "title": "OutputLine",
        "description": "Returns the results of AMPscript code executed within a code block, such as Concat() or V()), and includes the results inside the rendered content. The function also appends a CRLF following the results. The function does not return any passed direct literals.",
        "properties": [
          {
            "required": true,
            "ordinal": "value",
            "type": "",
            "desc": "The code that produces the results to be output by the system"
          }
        ]
      },
      "V": {
        "title": "V",
        "description": "Outputs the value of a variable.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Variable containing value to return"
          }
        ]
      }
    }
  },
  "ssjs_coreAccount": {
    "title": "Core Account Functions",
    "description": "Use these Core functions to access and modify accounts within your Marketing Cloud account",
    "functions": {
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieve an account based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for the account. Use a filter expression or a JSON object containing filter and additional search parameters."
          }
        ]
      },
      "trackingRetrieve": {
        "title": "Tracking.Retrieve",
        "description": "Returns an array of tracking data related to the accounts specified by the passed filter argument",
        "properties": [
          {
            "requires": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for account"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the account and returns a status",
        "properties": [
          {
            "requires": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Account attributes to change"
          }
        ]
      }
    }
  },
  "ssjs_coreAccountUser": {
    "title": "Core AccountUser Functions",
    "description": "Use these Core functions to access and modify accounts users authorized to work within your Marketing Cloud account",
    "functions": {
      "Activate": {
        "title": "Activate",
        "description": "Activates an account user",
        "properties": []
      },
      "Add": {
        "title": "Add",
        "description": "Creates a new account user based on the passed parameters",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "A JSON object representing the properties of the new account user"
          }
        ]
      },
      "Deactivate": {
        "title": "Deactivate",
        "description": "Deactivates an account user",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an account user based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "options",
            "desc": "Criteria used to search for account user"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the account and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding account to change"
          }
        ]
      }
    }
  },
  "ssjs_coreContentArea": {
    "title": "Content Area Functions",
    "description": "Use these functions to create and manipulate content areas inside your Marketing Cloud account. Email messages, SMS messages, and landing pages can make use of content areas.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new content area to your account and returns an initialized object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing the properties of the new content area"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized content area",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of content areas based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Critieria used to search for content"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the content area and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes of content area to change"
          }
        ]
      }
    }
  },
  "ssjs_coreDataExtension": {
    "title": "Data Extension Functions",
    "description": "Use these functions to access the fields and rows contained within a data extension via Server-side JavaScript.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Creates a new data extension and returns an initialized DataExtension object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "Object representing the properties of the new data extension"
          }
        ]
      },
      "FieldsAdd": {
        "title": "Fields.Add",
        "description": "Adds a new field to an existing data extension",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "Object containing the properties of the new field"
          }
        ]
      },
      "FieldsRetrieve": {
        "title": "Fields.Retrieve",
        "description": "Returns an array of JSON objects that describe the available fields in a data extension",
        "properties": []
      },
      "FieldsUpdateSendableField": {
        "title": "Fields.UpdateSendableField",
        "description": "Updates a data extension field used as part of a send from a current value to a new value",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes of content area to change"
          }
        ]
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of data extension objects based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Critieria used to search for data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "boolean",
            "desc": "Directs retrieve to search all accounts accessible to the authenticated user"
          }
        ]
      },
      "RowsAdd": {
        "title": "Rows.Add",
        "description": "Adds a row or array of rows to the initialized data extension",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "Information to include in row or array of rows"
          }
        ]
      },
      "RowsLookup": {
        "title": "Rows.Lookup",
        "description": "Returns columns that match the specified values",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Columns to search for data"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Values uses in search"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "numeric",
            "desc": "number of rows to return"
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Order of rows to return"
          }
        ]
      },
      "RowsRemove": {
        "title": "Rows.Remove",
        "description": "Deletes a row from the initialized data extension",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Fields used to filter row"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Values in fields used to filter row"
          }
        ]
      },
      "RowsRetrieve": {
        "title": "Rows.Retrieve",
        "description": "Retrieves up to 2500 rows of data in a data extension",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "string",
            "desc": "Specifies information to filter for the retrieve"
          }
        ]
      },
      "RowsUpdate": {
        "title": "Rows.Update",
        "description": "Updates the specified row with the specified information",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of column to update and value used to update"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Identifies columns to search for data"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Identifies values used for search"
          }
        ]
      }
    }
  },
  "ssjs_coreDateTime": {
    "title": "DateTime Functions",
    "description": "Allows access to data and time data information via server-side JavaScript for use in content and send contexts",
    "functions": {
      "LocalDateToSystemDate": {
        "title": "LocalDateToSystemDate",
        "description": "Converts the passed date-time string or value from the local time of the account or user to Marketing Cloud system time",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "datetime",
            "desc": "Local date-time value to convert"
          }
        ]
      },
      "Now": {
        "title": "Now",
        "description": "Returns the current system date and time",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "boolean",
            "desc": "Indicates whether to retain the time of the send. A value of 1 or true retains the time, and a value of 0 or false does not retain the time."
          }
        ]
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of time zones based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria to search for the list"
          }
        ]
      },
      "SystemDateToLocalDate": {
        "title": "SystemDateToLocalDate",
        "description": "Converts the passed system date time string or value to the local time of the account or user",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "datetime",
            "desc": "Local date-time value to convert"
          }
        ]
      }
    }
  },
  "ssjs_coreDeliveryProfile": {
    "title": "Delivery Profile Functions",
    "description": "Access and control delivery profiles within your Marketing Cloud account. Use these functions as part of a landing page or other application.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new delivery profile to the account and returns the created object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing the properties of the new delivery profile"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized delivery profile and returns the status of the action",
        "properties": []
      },
      "Update": {
        "title": "Update",
        "description": "Updates the delivery profile and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes of delivery profile to change"
          }
        ]
      }
    }
  },
  "ssjs_coreEmail": {
    "title": "Email Functions",
    "description": "Access and control email messages within your Marketing Cloud account. Use these functions as part of a landing page or other application.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new email to your account and returns an initialized object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object containing new email properties"
          }
        ]
      },
      "CheckContent": {
        "title": "CheckContent",
        "description": "Runs content checks on the initialized email and returns a JSON object indicating the result of the content check and any identified issues",
        "properties": []
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized email",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of emails based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for email"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the email and returns the status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding email to change"
          }
        ]
      },
      "Validate": {
        "title": "Validate",
        "description": "Runs validation checks on the initialized email and returns a JSON object indicating the result of the validation and any identified issues",
        "properties": []
      }
    }
  },
  "ssjs_coreEvents": {
    "title": "Event Functions",
    "description": "Retrieve and use information related to specific events occurring as part of message sends. These events include bounces, forwards, not sent messages, and survey responses.",
    "functions": {
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves information about events occurring related to a message send",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for event"
          }
        ]
      }
    }
  },
  "ssjs_coreFilterDefinition":{
    "title": "Filter Profile Functions",
    "description": "Manipulate data filters via server-side JavaScript",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new filter definition to your account",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object including properties of new filter definition"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Deletes the specified filter definition",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of filter definitions based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria on which to search for filter definitions"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates a filter definition and returns a status of OK or an error message",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding filter definition to change"
          }
        ]
      }
    }
  },
  "ssjs_coreFolder": {
    "title": "Folder Functions",
    "description": "Access and control folders within your Marketing Cloud account",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new folder to your account as a child to a previously existing folder and returns the status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing new folder properties"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized folder",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of folders based on the specified criteria. You will also retrieve details regarding the parent folder of a given folder if one exists.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for the folder"
          }
        ]
      },
      "Update": {
        "description": "Updates the folder and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding folder to change"
          }
        ]
      }
    }
  },
  "ssjs_coreHTTP": {
    "title": "HTTP Functions",
    "description": "Perform HTTP GET and HTTP POST actions and use that information as part of your interactions with Marketing Cloud",
    "functions": {
      "Get": {
        "title": "Get",
        "description": "Performs an HTTP GET using the provided name and value pairs against the passed URL and returns a JSON object containing a status value and the HTTP response. You can include multiple pairs of header names and values.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Destination URL for the HTTP GET request"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "array",
            "desc": "Array of header names to include in the request"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "array",
            "desc": "Array of header values corresponding to the header names included in the request "
          }
        ]
      },
      "IsCHTMLBrowser": {
        "title": "IsCHTMLBrowser",
        "description": "Indicates whether the passed-in user agent value represents a CHTML browser. CHTML browsers, such as those found on feature phones, use a modified version of HTML to display information on smaller screens with fewer resources than smartphones. This function returns a value of true or false indicating whether the browser uses CHTML. Use this value to determine whether or not to display CHTML content.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Value indicating the browser using by the device"
          }
        ]
      },
      "Post": {
        "title": "Post",
        "description": "Performs an HTTP POST using the provided information against the passed URL. The function returns a JSON object containing a status value and the HTTP response.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Destination URL for the HTTP POST request"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value to pass for the Content-Type header"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "POST request content"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Array of header names included in the request"
          }
        ]
      }
    }
  },
  "ssjs_coreList": {
    "title": "List Functions",
    "description": "ssjs_listFunctions.htm",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new list to your account and returns the initialized list object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of new list"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes the list you initialized previously",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves a list based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for the list"
          }
        ]
      },
      "SubscribersAdd": {
        "title": "Subscribers.Add",
        "description": "Allows you to add a subscriber to a list",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Subscriber email address"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Additional subscriber attributes"
          }
        ]
      },
      "SubscribersRetrieve": {
        "title": "Subscribers.Retrieve",
        "description": "Retrieves a list of subscribers based on the passed filter. The call returns an EmailTypePreference value only if the call involves a single subscriber.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for list subscribers"
          }
        ]
      },
      "SubscribersTrackingRetrieve": {
        "title": "Subscribers.Tracking.Retrieve",
        "description": "Returns an array of tracking data related to any subscribers specified by the passed filter argument",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for list subscribers"
          }
        ]
      },
      "SubscribersUnsubscribe": {
        "title": "Subscribers.Unsubscribe",
        "description": "Unsubscribes the specified subscriber from the list",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attribute containing Email address of subscriber or a JSON object containing the EmailAddress and SubscriberKey values for the subscriber"
          }
        ]
      },
      "SubscribersUpdate": {
        "title": "Subscribers.Update",
        "description": "Updates the status of the specified subscriber on the initialized list. Initialize the list using the list's external key value",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attribute containing Email address of subscriber or a JSON object containing the EmailAddress and SubscriberKey values for the subscriber"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "New status of subscriber on initialized list"
          }
        ]
      },
      "SubscribersUpsert": {
        "title": "Subscribers.Upsert",
        "description": "Adds any subscriber not on the specified list and updates any specified attributes",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attribute containing Email address of subscriber or a JSON object containing the EmailAddress and SubscriberKey values for the subscriber"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Any additional attributes regarding the subscriber. If the Status attribute exists in the passed attributes, it updates the subscriber status"
          }
        ]
      }
    }
  },
  "ssjs_corePortfolio": {
    "title": "Portfolio Functions",
    "description": "allow access via server-side JavaScript to the Portfolio contained in your Marketing Cloud account",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new content area to your account and returns an initialized object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object containing parameters associated with a Portfolio object"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized portfolio object",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Returns an array of Portfolio objects based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for Portfolio object"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the specified attributes of the specified Portfolio object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes to change for Portfolio object"
          }
        ]
      }
    }
  },
  "ssjs_coreQueryDefinition": {
    "title": "Query Definition Functions",
    "description": "Create, retrieve, update, delete, and run queries via Server-side JavaScript.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new query defintion to your account",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing new query definition properties"
          }
        ]
      },
      "Perform": {
        "title": "Perform",
        "description": "Performs a query definition from your account",
        "properties": []
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a query definition from your account",
        "properties": []
      },
      "Retrieve": {
        "title": "Add",
        "description": "Adds a new query defintion to your account",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "object",
            "desc": "retrieves an array of query definitions based on the specified criteria"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates a query definition and returns a status of OK or an error message",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "object",
            "desc": "Attributes for query definition to change"
          }
        ]
      }
    }
  },
  "ssjs_coreRecipient": {
    "title": "Recipient Functions",
    "description": "Access information regarding the recipients of your messages, no matter what the modality of that message may be",
    "functions": {
      "GetValue": {
        "title": "GetValue",
        "description": "Return the value of the specified attribute for the recipient",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the attribute"
          }
        ]
      }
    }
  },
  "ssjs_coreSendClassification": {
    "title": "Send Classification Functions",
    "description": "Retrieve information on the send classifications used as part of the email sends",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a send classification to the account",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing new send classification properties"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized send classification and returns the status of the action",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of send classifications based on the specified criteria",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for send classification"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the send classification and returns a status. You must provide keys for both the sender and delivery profiles to successfully update a send classification.",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes from send classification to change"
          }
        ]
      }
    }
  },
  "ssjs_coreSendFunctions": {
    "title": "Send Functions",
    "description": "Access and control how emails are sent via your Marketing Cloud account",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new send to your account and returns the status of the send's creation",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "CustomerKey of email message to associate with send"
          },
          {
            "required": "true",
            "ordinal": "2",
            "type": "array",
            "desc": "Array of list IDs to associate with send"
          },
          {
            "required": "true",
            "ordinal": "3",
            "type": "string",
            "desc": "Options to associate with the send, such as a different message subject or send time"
          }
        ]
      },
      "CancelSend": {
        "title": "CancelSend",
        "description": "Attempts to cancel a currently existing send",
        "properties": []
      },
      "DefinitionAdd": {
        "title": "Definition.Add",
        "description": "Add a send definition",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Customer key, name, and subject line for send definition"
          },
          {
            "required": "true",
            "ordinal": "2",
            "type": "string",
            "desc": "Customer key for related send classification"
          },
          {
            "required": "true",
            "ordinal": "3",
            "type": "string",
            "desc": "Customer key for email used in send definition"
          },
          {
            "required": "true",
            "ordinal": "4",
            "type": "array",
            "desc": "Array of associated list IDs"
          }
        ]
      },
      "DefinitionAddWithDE": {
        "title": "Definition.AddWithDE",
        "description": "Add a send definition that incorporates a sendable data extension",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Customer key, name, and subject line for send definition"
          },
          {
            "required": "true",
            "ordinal": "2",
            "type": "string",
            "desc": "Customer key for related send classification"
          },
          {
            "required": "true",
            "ordinal": "3",
            "type": "string",
            "desc": "Customer key for email used in send definition"
          },
          {
            "required": "true",
            "ordinal": "4",
            "type": "string",
            "desc": "Customer key of sendable data extension used in send definition"
          },
          {
            "required": "true",
            "ordinal": "5",
            "type": "string",
            "desc": "Customer key of publication list to use with send definition"
          }
        ]
      },
      "DefinitionAddWithFilterDefinition": {
        "title": "Definition.AddWithFilterDefinition",
        "description": "Add a send definition that incorporates a filter definition",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Customer key, name, and subject line for send definition"
          },
          {
            "required": "true",
            "ordinal": "2",
            "type": "string",
            "desc": "Customer key for related send classification"
          },
          {
            "required": "true",
            "ordinal": "3",
            "type": "string",
            "desc": "Customer key for email used in send definition"
          },
          {
            "required": "true",
            "ordinal": "4",
            "type": "string",
            "desc": "Customer key of filter definition used in send definition"
          },
          {
            "required": "true",
            "ordinal": "5",
            "type": "string",
            "desc": "Targeted list ID"
          }
        ]
      },
      "DefinitionRemove": {
        "title": "DefinitionRemove",
        "description": "Remove a previously initialized send definition and return the status of the removal",
        "properties": []
      },
      "DefinitionRetrieve": {
        "title": "DefinitionRetrieve",
        "description": "Retrieve send definitions based on the specified criteria",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for send definition"
          }
        ]
      },
      "DefinitionSend": {
        "title": "DefinitionSend",
        "description": "Sends email messages to the lists associated with the initialized send definition",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "object",
            "desc": "Date object specifying when send should perform. If you pass no value or a null value, the send performs immediately."
          }
        ]
      },
      "DefinitionUpdate": {
        "title": "DefinitionUpdate",
        "description": "Updates the send definition and returns a status",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes of send definition to change"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Remove an initialized send",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves a send based on the specified criteria",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for send"
          }
        ]
      },
      "RetrieveLists": {
        "title": "RetrieveLists",
        "description": "Retrieves information regarding which list or lists targeted by a Send event",
        "properties": []
      },
      "TrackingClickRetrieve": {
        "title": "Tracking.ClickRetrieve",
        "description": "Returns click tracking information for this send specified by the specified filter criteria",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to filter tracking results"
          }
        ]
      },
      "TrackingRetrieve": {
        "title": "Tracking.Retrieve",
        "description": "Returns an array of tracking data related to any sends specified by the passed filter argument",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for send"
          }
        ]
      },
      "TrackingTotalByIntervalRetrieve": {
        "title": "Tracking.TotalByIntervalRetrieve",
        "description": "Returns tracking data related to an initialized send specified by type, duration, and interval",
        "properties": [
          {
            "required": "true",
            "ordinal": "1",
            "type": "string",
            "desc": "Type of data to aggregate and return. Choose Send, Open, Click, Bounce, or Unsubscribe."
          },
          {
            "required": "true",
            "ordinal": "2",
            "type": "string",
            "desc": "Start date of data period"
          },
          {
            "required": "true",
            "ordinal": "3",
            "type": "string",
            "desc": "End date of data period"
          },
          {
            "required": "true",
            "ordinal": "4",
            "type": "string",
            "desc": "Interval used to aggregate data. Choose day or hour."
          }
        ]
      }
    }
  },
  "ssjs_coreSenderProfile": {
    "title": "Sender Profile Functions",
    "description": "Access and control sender profiles within your Marketing Cloud account. These functions work only with landing pages and cannot function in email messages at send time.",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new sender profile to the account and returns the created object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing new sender profile properties"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes a previously initialized sender profile and returns the status of the action",
        "properties": []
      },
      "Update": {
        "title": "Update",
        "description": "Updates the sender profile and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding sender profile to change"
          }
        ]
      }
    }
  },
  "ssjs_coreSubscriber": {
    "title": "Subscriber Functions",
    "description": "Create, update, and unsubscribe subscribers, as well as retrieve information about those subscribers",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new subscriber to your list and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing the properties of the new subscriber"
          }
        ]
      },
      "AttributesRetrieve": {
        "title": "Attributes.Retrieve",
        "description": "Returns an array of attributes belonging to the initialized subscriber",
        "properties": []
      },
      "ListsRetrieve": {
        "title": "Lists.Retrieve",
        "description": "Returns an array of information on the lists of which the initialized subscriber is a member",
        "properties": []
      },
      "Remove": {
        "title": "Remove",
        "description": "Deletes an initialized subscriber",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of subscribers based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "description": "Criteria used to search for subscriber"
          }
        ]
      },
      "Statistics": {
        "title": "Statistics",
        "description": "Retrieves an object containing send, click, and open statistics for an initialized subscriber",
        "properties": []
      },
      "Unsubscribe": {
        "title": "Unsubscribe",
        "description": "Sets a initialized subscriber's status to Unsubscribed",
        "properties": []
      },
      "Update": {
        "title": "Update",
        "description": "Updates the subscriber and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "description": "Attributes for subscriber to change"
          }
        ]
      },
      "Upsert": {
        "title": "Upsert",
        "description": "Updates a subscriber if one currently exists. If the subscriber does not exist, this function will add it.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "description": "Attributes for subscriber to update or insert"
          }
        ]
      }
    }
  },
  "ssjs_coreTemplate": {
    "title": "Template Functions",
    "description": "Interact with templates within a Marketing Cloud account",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a new template to your account and returns the status of the operation",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "JSON object representing properties of the new template"
          }
        ]
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves a template based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "JSON object or filter expression containing criteria used to search for the account"
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates a template and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding template to change"
          }
        ]
      }
    }
  },
  "ssjs_coreTriggeredSend": {
    "title": "Triggered Send Functions",
    "description": "Allows access to the triggered email feature via Server-side JavaScript",
    "functions": {
      "Add": {
        "title": "Add",
        "description": "Adds a triggered send to your account and returns an initialized object if successful",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Properties of the new triggered send"
          }
        ]
      },
      "Pause": {
        "title": "Pause",
        "description": "Pauses the triggered send and returns a status",
        "properties": []
      },
      "Publish": {
        "title": "Publish",
        "description": "Publishes changes and updates to a triggered send and returns a status",
        "properties": []
      },
      "Retrieve": {
        "title": "Retrieve",
        "description": "Retrieves an array of triggered send objects based on the specified criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for triggered send"
          }
        ]
      },
      "Send": {
        "title": "Send",
        "description": "Sends an email message using an existing triggered send definition. This function does not support the use of subscriber key as a valid parameter.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Email address used for triggered send"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Attributes included at send time for triggered send"
          }
        ]
      },
      "Start": {
        "title": "Start",
        "description": "Starts the triggered send and returns a status",
        "properties": []
      },
      "TrackingClicksRetrieve": {
        "title": "Clicks.Retrieve",
        "description": "Returns click tracking information for a triggered send specified by the specified filter criteria",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to filter tracking results"
          }
        ]
      },
      "TrackingRetrieve": {
        "title": "Retrieve",
        "description": "Returns an array of tracking data related to the triggered send specified by the passed filter argument",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Criteria used to search for triggered send"
          }
        ]
      },
      "TrackingTotalByIntervalRetrieve": {
        "title": "TotalByInterval.Retrieve",
        "description": "Returns tracking data related to an initialized triggered send specified by type, duration, and interval",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Type of data to aggregate and return. Valid values include Send, Open, CLick, Bounce, and Unsubscribe."
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "datetime",
            "desc": "Start date for data period"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "datetime",
            "desc": "End date for data period"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Interval used to aggregate data. Valid values include day and hour."
          }
        ]
      },
      "Update": {
        "title": "Update",
        "description": "Updates the triggered send definition and returns a status",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Attributes regarding triggered send definition to change"
          }
        ]
      }
    }
  },
  "ssjs_coreUtilities": {
    "title": "Utilities Functions",
    "description": "Load and modify data using server-side JavaScript",
    "functions": {
      "Logout": {
        "title": "Logout",
        "description": "Logs the user out of the application",
        "properties": []
      },
      "Redirect": {
        "title": "Redirect",
        "description": "Redirects user from a landing page to a specified URL",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL used in redirect"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "Boolean",
            "desc": "Indicates whether redirect is permanently enabled"
          }
        ]
      },
      "Base64Decode": {
        "title": "Base64Decode",
        "description": "Decodes a Base64 encoded string to a plain text string",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Base64 encoded string to decode"
          }
        ]
      },
      "Base64Encode": {
        "title": "Base64encode",
        "description": "Encodes plain text to a Base64 encoded string",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Text to encode"
          }
        ]
      },
      "ContentArea": {
        "title": "ContentArea",
        "description": "Returns the content stored in the content area specified by its ID",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "ID of specified content area"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of any impression region contained in content area"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Error message to deliver when the function cannot return content"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Content area to display when the function cannot find other content"
          }
        ]
      },
      "ContentAreaByName": {
        "title": "ContentAreaByName",
        "description": "Returns the content stored in the content area specified by its name",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of specified content area"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of any impression region contained in content area"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Error message to deliver when the function cannot return content"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Content area to display when the function cannot find other content"
          }
        ]
      },
      "GetValue": {
        "title": "GetValue",
        "description": "Retrieves the value of the specified HTTP header",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Header name"
          }
        ]
      },
      "Remove": {
        "title": "Remove",
        "description": "Removes the specified information from the HTTP header",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Header name"
          }
        ]
      },
      "SetValue": {
        "title": "SetValue",
        "description": "Sets value of an HTTP header",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Header name"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value to assign to header"
          }
        ]
      },
      "BeginImpressionRegion": {
        "title": "BeginImpressionRegion",
        "description": "Sets beginning of an impression region",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the impression region"
          }
        ]
      },
      "EndImpressionRegion": {
        "title": "EndImpressionRegion",
        "description": "Sets end of an impression region",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "string",
            "desc": "Insert value of ClearAll to clear all impression region information"
          }
        ]
      },
      "GetFormField": {
        "title": "GetFormField",
        "description": "Pulls back form field information POSTed to the page based on a specified key",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Key value used to identify applicable form field"
          }
        ]
      },
      "GetQueryStringParameters": {
        "title": "GetQueryStringParameters",
        "description": "Pulls back a query string parameter based on a specified key",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Key value used to identify applicable query string parameter"
          }
        ]
      },
      "Format": {
        "title": "Format",
        "description": "Formats a string value as specified",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String value to format"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Format to apply to string. Choose MM/dd/yyyy or Cn, where n represents the number of decimal places in the currency value."
          }
        ]
      },
      "GUID": {
        "title": "GUID",
        "description": "Returns a new GUID as a string value",
        "properties": []
      },
      "IsEmailAddress": {
        "title": "IsEmailAddress",
        "description": "Takes the string passed to it and evaluates it to see if that string contains a valid email address. The function returns either a true or false value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to evaluate"
          }
        ]
      },
      "IsPhoneNumber": {
        "title": "IsPhoneNumber",
        "description": "Evaluates a passed string to determine if it contains a valid phone number. The function returns either a true or false value.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String to evaluate"
          }
        ]
      },
      "Stringify": {
        "title": "Stringify",
        "description": "Transforms an object into a string value",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "object",
            "desc": "Object to transform into a string value"
          }
        ]
      },
      "Write": {
        "title": "Write",
        "description": "Writes the specified string value to the content create",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "String value to write"
          }
        ]
      },
      "VariableGetValue": {
        "title": "Variable.GetValue",
        "description": "Retrieves the value of a specified variable",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of variable"
          }
        ]
      },
      "VariableSetValue": {
        "title": "Variable.SetValue",
        "description": "Assigns value to a specified variable",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of variable"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Vaue to assign to variable"
          }
        ]
      }
    }
  },
  "ssjs_platformAPI": {
    "title": "API Functions",
    "description": "Access the Web Service SOAP API with these functions",
    "functions": {
      "AddObjectArrayItem": {
        "title": "AddObjectArrayItem",
        "description": "Creates an item within an array for a specified API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to set array value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of array"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "New array value"
          }
        ]
      },
      "CreateObject": {
        "title": "CreateObject",
        "description": "Create the specified API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of API object to create"
          }
        ]
      },
      "InvokeConfigure": {
        "title": "InvokeConfigure",
        "description": "Invokes the Configure method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Configure method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Method to perform on the object"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeCreate": {
        "title": "InvokeCreate",
        "description": "Invokes the create method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Create method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeDelete": {
        "title": "InvokeDelete",
        "description": "Invokes the Delete method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Delete method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeExecute": {
        "title": "InvokeExecute",
        "description": "Invokes the Execute method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Execute method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeExtract": {
        "title": "InvokeExtract",
        "description": "Invokes the Extract method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Extract method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokePerform": {
        "title": "InvokePerform",
        "description": "Invokes the Perform method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Perform method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Method to perform on the object"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeRetrieve": {
        "title": "InvokeRetrieve",
        "description": "Invokes the Retrieve method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Retrieve method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          }
        ]
      },
      "InvokeSchedule": {
        "title": "InvokeSchedule",
        "description": "Invokes the Schedule method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Schedule method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Method to perform on the object"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Schedule defintion object to use with Schedule method"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "InvokeUpdate": {
        "title": "InvokeUpdate",
        "description": "Invokes the Update method on the specified object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to perform Update method"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Array containing status and RequestID of API call"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "API configure options to include in call. Can contain a null value."
          }
        ]
      },
      "SetObjectProperty": {
        "title": "SetObjectProperty",
        "description": "Sets the value of a property on a specified API object",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Object on which to set property value"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Property name"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "New property value"
          }
        ]
      }
    }
  },
  "ssjs_platformFieldAttribute": {
    "title": "Field and Attribute Functions",
    "description": "Access attributes or fields from sendable data extensions related to the contact receiving the rendered content. Rendered content can appear in messages or web pages.",
    "functions": {
      "GetAttributeValue": {
        "title": "GetAttributeValue",
        "description": "Returns the value from the specified attribute or sendable data extension field",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "The specified attribute or sendable data extension field"
          }
        ]
      }
    }
  },
  "ssjs_platformHTTP": {
    "title": "HTTP Functions",
    "description": "Interact with URL information, retrieve locale information from a client browser, or GET and POST information to a URL. You can use this functionality to include content from a URL within an email or landing page or format URLs for inclusion in rendered content.",
    "functions": {
      "RedirectTo": {
        "title": "RedirectTo",
        "description": "Specify the target of a link be a complete URL stored in an attribute, data extension field, or variable. You can only use this function in HTML emails within the href attribute of an anchor tag. In text emails, add the http:// prefix and do not include any spaces within the parentheses. In order to retain tracking information for clicked links, you must include the anchor tags within the email itself and not the link retrieved via this function.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL to redirect the browser"
          }
        ]
      },
      "UrlEncode": {
        "title": "UrlEncode",
        "description": "Encode any spaces contained in a URL. By default, this function encodes spaces as %20. If you set the optional Boolean tag to true, the function returns all spaces as a + character.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "URL to encode"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "Boolean",
            "desc": "Indicates whether to encode spaces as a + character. A value of true encodes spaces, and a value of false does not encode spaces."
          }
        ]
      }
    }
  },
  "ssjs_platformContent": {
    "title": "Content Functions",
    "description": "Interact with content, content areas, and impression regions within your messages or pages",
    "functions": {
      "BeginImpressionRegion": {
        "title": "BeginImpressionRegion",
        "description": "Begin an impression region within the supplied content. You can use the impression region to identify specific areas of content for analytical purposes.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of impression region"
          }
        ]
      },
      "ContentArea": {
        "title": "ContentArea",
        "description": "Retrieve content from a specified content area in a Marketing Cloud account",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "numeric",
            "desc": "ID for content area"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Impression region for content"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "Boolean",
            "desc": "Indicates whether a call proceeds if it fails to retrieve content. A value of true returns an exception and terminates the call. A value of false allows the call to proceed."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to display if the call does not return content from the specified content area"
          }
        ]
      },
      "ContentAreaByName": {
        "title": "ContentAreaByName",
        "description": "Retrieve content from a specified content area in a Marketing Cloud account",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of content area"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Impression region for content"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "Boolean",
            "desc": "Indicates whether a call proceeds if it fails to retrieve content. A value of true returns an exception and terminates the call. A value of false allows the call to proceed."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to display if the call does not return content from the specified content area"
          }
        ]
      },
      "ContentBlockByID": {
        "title": "ContentBlockByID",
        "description": "Retrieve content from a specified content block in Content Builder",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "ID for content block"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Impression region for content"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "Boolean",
            "desc": "Indicates whether a call proceeds if it fails to retrieve content. A value of true returns an exception and terminates the call. A value of false allows the call to proceed."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to display if the call does not return content from the specified content area"
          }
        ]
      },
      "ContentBlockByKey": {
        "title": "ContentBlockByKey",
        "description": "Retrieve content from a specified content block in Content Builder",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key for content block"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Impression region for content"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "Boolean",
            "desc": "Indicates whether a call proceeds if it fails to retrieve content. A value of true returns an exception and terminates the call. A value of false allows the call to proceed."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to display if the call does not return content from the specified content area"
          }
        ]
      },
      "ContentBlockByName": {
        "title": "ContentBlockByName",
        "description": "Retrieve content from a specified content block in Content Builder. This function will only work with shared content in a business unit if it is shared using a shared folder.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of the content block to return, including the path within the my contents folder if necessary"
          },
          {
            "required": false,
            "ordinal": "2",
            "type": "string",
            "desc": "Impression region for content"
          },
          {
            "required": false,
            "ordinal": "3",
            "type": "Boolean",
            "desc": "Indicates whether the function returns an error when the system cannot locate the specified content area or returns an invalid content area. A value of true returns an error. A value of false does not return an error."
          },
          {
            "required": false,
            "ordinal": "4",
            "type": "string",
            "desc": "Default content to return if an error occurs and no error returns. This value defaults to an empty string."
          },
          {
            "required": false,
            "ordinal": "5",
            "type": "string",
            "desc": "Returns the status of the call. A value of 0 indicates the function found the content area and successfully rendered the content. A value of -1 indicates either no content or an invalid content area, so the function returns the default content value."
          }
        ]
      },
      "ContentImagebyID": {
        "title": "ContentImagebyID",
        "description": "Returns an img tag with the src attribute containing the path to an image from Content Builder. Identify the image to include with the ID value. The img tag includes the title and alt information for the selected image, as well as a border value, measured in pixels, and any identified thid value. If the value of the first parameter does not link to a valid image, you can include another image value for the second parameter as a default option.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "ID of image to return"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value used to return image if function cannot find the original image ID"
          }
        ]
      },
      "ContentImagebyKey": {
        "title": "ContentImagebyKey",
        "description": "Returns an img tag with the src attribute containing the path to an image from Content Builder. Identify the image to include with the ID value. The img tag includes the title and alt information for the selected image, as well as a border value, measured in pixels, and any identified thid value. If the value of the first parameter does not link to a valid image, you can include another image value for the second parameter as a default option.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "External key of image to return"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Value used to return image if function cannot find the original image ID"
          }
        ]
      },
      "EndImpressionRegion": {
        "title": "EndImpressionRegion",
        "description": "Ends an impression region within the supplied content. You can use the impression region to identify specific areas of content for analytical purposes.",
        "properties": [
          {
            "required": false,
            "ordinal": "1",
            "type": "Boolean",
            "desc": "Indicates whether the function closes all nested impression regions. A value of true closes all nested impression regions. A value of false does not close all nested impression regions."
          }
        ]
      },
      "TreatAsContent": {
        "title": "TreatAsContent",
        "description": "Takes a supplied string value and treat it as a content area taken from a Marketing Cloud account. This function renders all included dynamic content, scripts, and personalization strings. Use the HTTPGETWRAP command to wrap links for tracking and analytics within this function.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Provided content"
          }
        ]
      }
    }
  },
  "ssjs_platformDataExtension": {
    "title": "Data Extension Functions",
    "description": "Use the associated methods to work with data extensions inside your Marketing Cloud account. You can use this object to add, edit, or delete information from these data extensions. For example, you can search for a ZIP code and pull back corresponding information, such as city name or closest store location, to include in a message or landing page.",
    "functions": {
      "DeleteData": {
        "title": "DeleteData",
        "description": "Deletes information from a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value pairs in a single call. You can use this method in non-sending contexts, such as landing pages. This call returns the number of rows modified.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Names of columns from data extension"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Names of values in data extension"
          }
        ]
      },
      "DeleteDE": {
        "title": "DeleteDE",
        "description": "Deletes information from a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value pairs in a single call. You can use this method in sendable contexts, such as email messages.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Names of columns from data extension"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Names of values in data extension"
          }
        ]
      },
      "InsertData": {
        "title": "InsertDE",
        "description": "Inserts information into a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value pairs in a single call. You can use this method in non-sendable contexts, such as landing pages. This call returns the number of rows modified.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Names of columns to insert into data extension"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Names of values to insert into data extension"
          }
        ]
      },
      "InsertDE": {
        "title": "InsertDE",
        "description": "Inserts information into a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value parts in a single call. You can use this method in sendable contexts, such as email messages.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "array",
            "desc": "Names of columns to insert into data extension"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "array",
            "desc": "Names of values to insert into data extension"
          }
        ]
      },
      "Lookup": {
        "title": "Lookup",
        "description": "Retrieves the value of a specific field from a column in the specified data extension.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column from which to retrieve value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string or array",
            "desc": "String value with name to match for row containing lookup value. You can also include an array of column names for use in a filter."
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string or array",
            "desc": "String value used to match lookup value. You can also include an array of column values for use in a filter."
          }
        ]
      },
      "LookupOrderedRows": {
        "title": "LookupOrderedRows",
        "description": "Retrieves the value of a specific field from a column in the specified data extension.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension from which you want to return specified rows"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "numeric",
            "desc": "Number of rows to return. A value less than 1 returns the default 2000 rows. This limitation enhances script performance."
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string",
            "desc": "Indicates how to order returned rows, including the value and ASC or DESC"
          },
          {
            "required": true,
            "ordinal": "4",
            "type": "string",
            "desc": "Field to use to build WHERE clause."
          },
          {
            "required": true,
            "ordinal": "5",
            "type": "string",
            "desc": "Value to use to build WHERE clause."
          }
        ]
      },
      "LookupRows": {
        "title": "LookupRows",
        "description": "Retrieves a rowset from a data extension where the field matches the specified value. You can specify additional field value pairs as part of an AND clause. This function returns a maximum of 2000 rows. To better control the number or the order of returned rows, use the LookupOrderedRows() function. This limitation helps enhance script performance.",
        "properties": [
          {
            "required": true,
            "ordinal": "1",
            "type": "string",
            "desc": "Name of data extension"
          },
          {
            "required": true,
            "ordinal": "2",
            "type": "string",
            "desc": "Name of column from which to retrieve value"
          },
          {
            "required": true,
            "ordinal": "3",
            "type": "string or array",
            "desc": "Value used to match column value"          }
          ]
        },
        "UpdateData": {
          "title": "UpdateData",
          "description": "Updates existing information into a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value parts in a single call. You can use this method in non-sendable contexts, such as landing pages. This call returns the number of rows modified.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of data extension"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "array",
              "desc": "Array containing column names to filter on"
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "array",
              "desc": "Array containing values to filter on"
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array containing column names to include updates"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array containing column values to update"
            }
          ]
        },
        "UpdateDE": {
          "title": "UpdateDE",
          "description": "Updates existing information into a data extension as indicated by the array containing the listed column name and value pairs. You can include multiple column name and value parts in a single call. You can use this method in sendable contexts, such as email messages. This call returns the number of rows modified.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of data extension"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "array",
              "desc": "Array containing column names to filter on"
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "array",
              "desc": "Array containing values to filter on"
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array containing column names to include updates"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array containing column values to update"
            }
          ]
        },
        "UpsertData": {
          "title": "UpsertData",
          "description": "Updates or inserts information into a data extension as indicated by the array containing the listed column name and value pairs. This method adds the information if the data extension does not contain an applicable value or updates the existing applicable value to the new value. You can include multiple column name and value parts in a single call. You can use this method in non-sendable contexts, such as landing pages. This call returns the number of rows modified.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of data extension"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "array",
              "desc": "Array containing column names to filter on"
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "array",
              "desc": "Array containing values to filter on"
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array containing column names to include updates"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array containing column values to update"
            }
          ]
        },
        "UpsertDE": {
          "title": "UpsertDE",
          "description": "Updates or inserts information into a data extension as indicated by the array containing the listed column name and value pairs. This method adds the information if the data extension does not contain an applicable value or updates the existing applicable value to the new value. You can include multiple column name and value parts in a single call. You can use this method in sendable contexts, such as email messages.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of data extension"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "array",
              "desc": "Array containing column names to filter on"
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "array",
              "desc": "Array containing values to filter on"
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array containing column names to include updates"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array containing column values to update"
            }
          ]
        }
      }
    },
    "ssjs_platformDateTime": {
      "title": "DateTime Functions",
      "description": "Inserts relevant dates or times into messages or pages. You can also insert this information into data extensions for usage later in date- or time-based sends or activities. Use these functions whenever you need to capture or refer to specific dates and times as part of your Marketing Cloud activities.",
      "functions": {
        "LocalDateToSystemDate": {
          "title": "LocalDateToSystemDate",
          "description": "Pass a local date and time value and return that value in the system time format",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "datetime",
              "desc": "Local date and time value"
            }
          ]
        },
        "Now": {
          "title": "Now",
          "description": "Returns the current date and time values from the system by default. If you add the optional Boolean true value, this function will return the original time of a send or activity from the applicable context, such as a message send or a landing page rendering.",
          "properties": [
            {
              "required": false,
              "ordinal": "1",
              "type": "Boolean",
              "desc": "Indicates whether to return the original time of send or activity. A value of true returns the original time. A value of false returns the current system date and time."
            }
          ]
        },
        "SystemDateToLocalDate": {
          "title": "SystemDateToLocalDate",
          "description": "Pass a system date and time value and return that value in the local time format",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "datetime",
              "desc": "System date and time value"
            }
          ]
        }
      }
    },
    "ssjs_platformClientBrowser": {
      "title": "Client Browser Functions",
      "description": "Retrieves various types of HTTP Response object properties and platform application values. The server passes this information to the client browser during an HTTP interaction, so this object contains information for the browser to parse and render as directed.",
      "functions": {
        "Redirect": {
          "title": "Redirect",
          "description": "Redirects the client browser to the specified URL and terminate any processing of the current web content",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "URL used to redirect the client browser via a HTTP 302 redirect"
            },
            {
              "required": false,
              "ordinal": "2",
              "type": "Boolean",
              "desc": "Indicates whether the redirect is temporary or permanent. A value of true indicates a permanent HTTP 301 redirect. A value of false indicates a temporary HTTP 302 redirect."
            }
          ]
        },
        "RemoveCookie": {
          "title": "RemoveCookie",
          "description": "Removes the specified cookie",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Identifies the cookie to remove"
            }
          ]
        },
        "RemoveResponseHeader": {
          "title": "RemoveResponseHeader",
          "description": "Removes the specified HTTP Response header",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Response header to remove"
            }
          ]
        },
        "SetCookie": {
          "title": "SetCookie",
          "description": "Sets the name and value of the specified session cookie",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Session cookie name"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "string",
              "desc": "Session cookie value"
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "datetime",
              "desc": "Date and time value indicating cookie expiration"
            },
            {
              "required": false,
              "ordinal": "4",
              "type": "Boolean",
              "desc": "Indicates whether cookie works with only HTTPS connections"
            }
          ]
        },
        "SetResponseHeader": {
          "title": "SetResponseHeader",
          "description": "Sets the value of the specified platform or HTTP Response header",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of response header"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "string",
              "desc": "Response header value"
            }
          ]
        },
        "Write": {
          "title": "Write",
          "description": "Writes a string value to the response sent to the browser. This function does not wrap links for tracking in email messages.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Value written to response"
            }
          ]
        }
      }
    },
    "ssjs_platformUtility": {
      "title": "Utility Functions",
      "description": "Parse, encode, decode, or return a GUID for a specific function. These methods allow you to perform utility tasks as part of your overall server-side JavaScript creation efforts.",
      "functions": {
        "Base64Decode": {
          "title": "Base64Decode",
          "description": "Decodes any string value encoded using the Base64Encode() function. This function works only with values encoded using the specific server-side JavaScript function and not any other Base64-encoded string values.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Base64 encoded string to decode"
            },
            {
              "required": false,
              "ordinal": "2",
              "type": "string",
              "desc": "Character set to use when decoding string value, such as ASCII or UTF-8"
            }
          ]
        },
        "Base64Encode": {
          "title": "Base64Encode",
          "description": "Encodes any string value. You can only decode any encoded string values using the specific server-side JavaScript function Base64Decode() and not any other Base64-encoded string values.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "String to encode"
            },
            {
              "required": false,
              "ordinal": "2",
              "type": "string",
              "desc": "Character set to use when decoding string value, such as ASCII or UTF-8"
            }
          ]
        },
        "GUID": {
          "title": "GUID",
          "description": "Returns a random GUID value for use as a unique identifier.",
          "properties": []
        },
        "IsEmailAddress": {
          "title": "IsEmailAddress",
          "description": "Evaluates a string value and determines if that string value contains a valid email address. This function returns a Boolean value based on the evaluation.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "String to evaluate"
            }
          ]
        },
        "IsPhoneNumber": {
          "title": "IsPhoneNumber",
          "description": "Evaluates a string value and determines if that string value contains a valid phone number. This function returns a Boolean value based on the evaluation.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "String to evaluate"
            }
          ]
        },
        "MD5": {
          "title": "MD5",
          "description": "Returns an MD5 hash for a given string value.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "String to evaluate"
            },
            {
              "required": false,
              "ordinal": "2",
              "type": "string",
              "desc": "Character set to use when decoding string value, such as ASCII or UTF-8"
            }
          ]
        },
        "ParseJSON": {
          "title": "ParseJSON",
          "description": "Parses the supplied string or array value and returns a object from that value. This function will not execute functions within the supplied values.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string or array",
              "desc": "String or array to parse"
            }
          ]
        },
        "RaiseError": {
          "title": "RaiseError",
          "description": "Passes an error message when an error occurs",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Error message"
            },
            {
              "required": true,
              "ordinal": "1",
              "type": "Boolean",
              "desc": "Indicates whether error applies to current message recipient or entire send job. A value of true indicates the current message recipient. A value of false applies to the entire send job."
            },
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Applicable status code"
            },
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Applicable error code"
            }
          ]
        },
        "Stringify": {
          "title": "Stringify",
          "description": "Converts a passed JavaScript object into a JSON string value. This function works only with known JSON objects and types, such as string and integer values.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "object",
              "desc": "JavaScript object to convert to a string value"
            }
          ]
        }
      }
    },
    "ssjs_platformAMPscriptVariable": {
      "title": "AMPscript Variable Functions",
      "description": "Retrieves values from declared AMPscript variable in the JavaScript context, allowing you to use both languages as necessary for your activities. All variables must follow the AMPscript variable-naming syntax. Variable server-side JavaScript functions will add a @ prefix to any variable that does not include that prefix. These functions can only work with AMPscript variables in the current context.",
      "functions": {
        "GetValue": {
          "title": "GetValue",
          "description": "Returns the value from the specified AMPscript variable in the current script context",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "AMPscript variable from which to return the value"
            }
          ]
        },
        "SetValue": {
          "title": "SetValue",
          "description": "Returns the value from the specified AMPscript variable in the current script context",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "AMPscript variable containing value"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "string",
              "desc": "Value passed to AMPscript variable"
            }
          ]
        }
      }
    },
    "ssjs_platformHTTPProperty": {
      "title": "HTTP Property Functions",
      "description": "Retrieve various types of HTTP Request object properties and platform application values. The client browser passes this information to the server during an HTTP interaction, so this object contains information regarding the browser and session. These methods return a null value when no HTTP Request object exists or if the given value does not exist in the header object.",
      "functions": {
        "GetCookieValue": {
          "title": "GetCookieValue",
          "description": "Retrieves information from specified cookies",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of cookie"
            }
          ]
        },
        "GetFormField": {
          "title": "GetFormField",
          "description": "Retrieves information from specified form fields, such as data included in POST requests",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of field for the specifoed data"
            }
          ]
        },
        "GetPostData": {
          "title": "GetPostData",
          "description": "Returns the data from the POST payload sent to the requested resource as a string, converted using the provided optional encoding parameter. A common use case is processing JSON payloads supplied to a page. For accessing data sent via a form POST request, use: Platform.Request.GetFormField(fieldName).",
          "properties": [
            {
              "required": false,
              "ordinal": "1",
              "type": "string",
              "desc": "Encoding format. If no value is entered, the encoding format will default to Windows-1252."
            }
          ]
        },
        "GetQueryStringParameter": {
          "title": "GetQueryStringParameter",
          "description": "Retrieves information from specified query string parameters, such as data included in GET requests",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of query string parameter"
            }
          ]
        },
        "GetRequestHeader": {
          "title": "GetRequestHeader",
          "description": "Retrieves information from specified request headers",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Name of header"
            }
          ]
        },
        "GetUserLanguages": {
          "title": "GetUserLanguages",
          "description": "Returns a string array of locale codes associated with a user browser. You can use this information to send language- and country-appropriate content or formatting to a microsite or landing page. This function performs correctly only within a web context.",
          "properties": []
        }
      }
    },
    "ssjs_platformContentSyndication": {
      "title": "Content Syndication Functions",
      "description": "Provides an object-oriented programming experience for those performing content syndication tasks. These functions also provide additional functionality for content syndication than the HTTPGet() and HTTPPost() objects for server-side JavaScript. Use these functions within email sends to syndicate content with a number of available options, including specifying content types and HTTP methods.",
      "functions": {
        "ScriptUtilHttpResponse": {
          "title": "Script.Util.HttpResponse",
          "description": "Returns this object from the send() method used for HttpGet() and HttpRequest() request handlers. This object contains information returned from the external URL specified in the request. Marketing Cloud sets the timeout for this function at 30 seconds.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Returns the specified response header"
            }
          ]
        },
        "ScriptUtilHttpRequest": {
          "title": "Script.Util.HttpRequest",
          "description": "Uses all arguments and methods from the HttpGet() call, along with the listed additional properties. This call performs no caching for email content. Marketing Cloud sets the timeout for this function at 30 seconds.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "URL from which to perform the GET function"
            }
          ]
        },
        "ScriptUtilHttpGet": {
          "title": "Script.Util.HttpGet",
          "description": "Performs a GET from the specified URL and interacts with HTTP headers as specified by the applicable methods. This function caches content for use in mail sends. This function returns a Script.Util.HttpResponse object with the response from the GET call. Marketing Cloud sets the timeout for this function at 30 seconds.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "Returns the specified response header"
            }
          ]
        },
        "HTTPGet": {
          "title": "HTTPGet",
          "description": "Retrieves information from the specified URL via a GET request. Marketing Cloud sets the timeout for this function at 30 seconds.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "URL from which to retrieve content"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "Boolean",
              "desc": "Indicates whether GET request continues if an error occurs during the process. A value of true stops the request. A value of false allows the request to continue."
            },
            {
              "required": false,
              "ordinal": "3",
              "type": "numeric",
              "desc": "Indicates how function handles a URL with empty content. A value of 0 allows empty content. A value of 1 returns an error. A value of 2 skips the subscriber."
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array of header names and values to include in GET request"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array containing HTTP code of response to function"
            }
          ]
        },
        "HTTPPost": {
          "title": "HTTPPost",
          "description": "Posts content to the specified URL. This function only works with HTTP on port 80 and HTTPS on port 443. Non-standard port assignments cause this function to fail. Marketing Cloud honors any character set returned in the HTTP headers via Content-Type. For example, you can use a UTF-8 encoded HTML file with Content-Type: text&#47;html; charset&#61;utf-8 included in the header. If the header does not specify the encoding, the application assumes all returned data will use the character set WindowsCodePage 1252. Marketing Cloud sets the timeout for this function at 30 seconds.",
          "properties": [
            {
              "required": true,
              "ordinal": "1",
              "type": "string",
              "desc": "URL receiving posted content"
            },
            {
              "required": true,
              "ordinal": "2",
              "type": "string",
              "desc": "Specified content-type header value"
            },
            {
              "required": true,
              "ordinal": "3",
              "type": "string",
              "desc": "Content to post to URL"
            },
            {
              "required": true,
              "ordinal": "4",
              "type": "array",
              "desc": "Array of header names included in POST request"
            },
            {
              "required": true,
              "ordinal": "5",
              "type": "array",
              "desc": "Array of header values included in POST request"
            },
            {
              "required": true,
              "ordinal": "6",
              "type": "array",
              "desc": "Array containing HTTP code of response to function and any additional response header names and values"
            }
          ]
        }
      }
    }
  }
